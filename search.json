[{"path":[]},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"How to contribtute","text":"follow google style guide. Differences highlights: snake_case can used exported functions alias Use ## comments Non-exported functions prefixed . Use sections headlines organize code Insert newline functions two lines sections recommended use tools like lintr styler automatic syntax checks formatting.","code":"#' Title #' #' @param x #' #' @return #' @export camelCase <- function(x) {   print(x) }  #' @rdname foo #' @export snake_case <- camelCase"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"use-file-headers","dir":"","previous_headings":"Code style","what":"Use file headers","title":"How to contribtute","text":"files /R directory header summary functionality provided file.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"for-loops-vs-apply-family","dir":"","previous_headings":"Code style","what":"for loops vs apply family","title":"How to contribtute","text":"Prefer loops operations independent, e.g. next iteration depends result former recursion -place modifications; apply require use <<- operator, can bit tricky due way works (e.g. look parent environments variable assign value first one finds). use apply consider preferring vapply() safer (e.g. silent failure) vs sapply() Performance considerations regarding loops vs apply really existent anymore. favor readability, correctness robustness.","code":""},{"path":[]},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"load-order-matters","dir":"","previous_headings":"Internals","what":"Load order matters","title":"How to contribtute","text":"Due way cache debug messages work package, load order R files matter. Thus, need make sure include statements present beginning file. pkg_setup.R file used doubt order make sure basic setup loaded first. can require multiple files necessary skip pkg_setup.R already included files.","code":"##' @include pkg_setup.R NULL ##' @include cache.R printing.R NULL"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"cache","dir":"","previous_headings":"Internals","what":"Cache","title":"How to contribtute","text":"want manipulate cache .pkgcache, use putCache() getCache() functions. use correct environment make usage cache much easier. plenty examples code. Otherwise pain! Consider using syncCache() similar within functions manipulate cache. way, can make sure updated cache synchronized.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"commits--pull-requests","dir":"","previous_headings":"","what":"Commits & Pull requests","title":"How to contribtute","text":"Please use following template creating commits PRs.","code":"Summarize the change in less than 50 characters  # Headline optional # Use bullets Problem: - Problem, task, reason for commit - Make a new bullet for each reason - Each line should be under 72 characters  # Headline optional # Use bullets or whole sentences to explain what has been done Solution: - Solution or list of Changes Explain exactly what was done in this commit with more depth than the 50 character subject line. Remember to wrap at 72 characters!  Include any additional notes, relevant links, or co-authors."},{"path":"https://swisstph.github.io/r-openMalariaUtilities/CONTRIBUTING.html","id":"versioning--releases","dir":"","previous_headings":"","what":"Versioning & Releases","title":"How to contribtute","text":"follow YY.MM.minorversion (e.g. 22.08.0) schema version names. Minor, non-breaking changes cause increase minor version, e.g. .1 -> .2. Big changes, might breaking, lead updated YY.MM. Consequentially, bump version lead tagged release. Ideally, version bump last commit . Ignoring guidelines can lead rejection contribution!","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2021 Emilie POTHIN  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. openMalariaUtilities Copyright (C) 2021 Emilie POTHIN This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Introduction to openMalariaUtilities","text":"Make sure SQLite Open Malaria installed available system. Please note: Even though package work Windows, developed tested Linux. install package, run","code":"devtools::install_github(\"SwissTPH/r-openMalariaUtilities\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to openMalariaUtilities","text":"Withing tutorial, create run example scenarios. scenario needs defined XML file serves input Open Malaria (OM). OpenMalariaUtilities (OMU) contains many functions help generate input files. tutorial re-create example Open Malaria .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"xml-file-generation","dir":"Articles","previous_headings":"","what":"XML file generation","title":"Introduction to openMalariaUtilities","text":"large part OMU dedicated generation valid OM XML files. start generation files, explain folder layout projects. folder hierarchy, working project directory top level. Within folder, can one folders correspond names experiments. simulations experiments controlled via one multiple R scripts, placed project directory. Please note: directories can modified via function arguments, sake simplicity using defaults . experiment folders similar layout content. need worry creation folders files. OMU create necessary folders download required files . cache folder contains R objects used OMU store reusable information. speed certain operations. Log files stored logs folder (contain sub-folders step process) OM’s raw output outputs. XML files simulation scenario stored scenarios folder.","code":"MyProject ├── experiment_1 ├── experiment_2 ├── ... ├── script_1.R ├── script_2.R └── ... MyProject/experiment_1 ├── cache/ ├── logs/ ├── outputs/ ├── scenarios/ ├── autoRegressionParameters.csv ├── densities.csv ├── base.xml └── scenario_44.xsd"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"starting-the-project","dir":"Articles","previous_headings":"XML file generation","what":"Starting the project","title":"Introduction to openMalariaUtilities","text":"R script, probably start library(openMalariaUtilities). Thus, beginning look like XML file generation, OMU uses list input (: baseList). list similar structure XML file required OM easier edit R compared XML. snippet corresponds minimal skeleton input list. expName name experiment OMVersion version Open Malaria. Currently, version 44 supported. Also note, OM version needs integer. six nested lists demography, monitoring, interventions, healthSystem, entomology model need filled OM.","code":"library(openMalariaUtilities)  ## Basic skeleton baseList <- list(   ## Mandatory   expName = \"example\",   ## Mandatory   OMVersion = 44L,   ## Optional   ## analysisNo = 1L,   ## Mandatory   demography = list(),   monitoring = list(),   interventions = list(),   healthSystem = list(),   entomology = list(),   ## These are optional for OM   ## parasiteGenetics = list(),   ## pharmacology = list(),   ## diagnostics = list(),   model = list() )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"demography","dir":"Articles","previous_headings":"XML file generation","what":"Demography","title":"Introduction to openMalariaUtilities","text":"two ways add data demography entry: Add manually, e.g. baseList[[\"demography\"]] <- list(name = \"Ifakara\",    ...) Use provided defineDemography() function use second option tutorial. can find various defineXY functions designed add specific entry list. However, always option write parts change specific entries manually (See also extractList()). snippet, started creating data frame contains demographic data. turn used input defineDemography() among parameters. function take care information added correct position also check, correct data types used.","code":"demo_data <- data.frame(   poppercent = c(     3.474714994, 12.76004028, 14.52151394, 12.75565434, 10.83632374,     8.393312454, 7.001421452, 5.800587654, 5.102136612, 4.182561874,     3.339409351, 2.986112356, 2.555766582, 2.332763433, 1.77400255,     1.008525491, 0.74167341, 0.271863401, 0.161614642   ),   upperbound = c(     1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90   ) )   baseList <- defineDemography(   baseList,   name = \"Ifakara\",   popSize = 4000L,   maximumAgeYrs = 90,   lowerbound = 0,   poppercent = demo_data$poppercent,   upperbound = demo_data$upperbound )  str(baseList, max.level = 2) #> List of 8 #>  $ expName      : chr \"example\" #>  $ OMVersion    : int 44 #>  $ demography   :List of 4 #>   ..$ name         : chr \"Ifakara\" #>   ..$ popSize      : int 4000 #>   ..$ maximumAgeYrs: num 90 #>   ..$ ageGroup     :List of 20 #>  $ monitoring   : list() #>  $ interventions: list() #>  $ healthSystem : list() #>  $ entomology   : list() #>  $ model        : list()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"monitoring","dir":"Articles","previous_headings":"XML file generation","what":"Monitoring","title":"Introduction to openMalariaUtilities","text":"monitoring section controls output Open Malaria, generated conducted surveys. started monitoring definition giving name defining start date. , mandatory allows us use dates input Open Malaria. defines starting point survey period. options, two generator functions used take name option value input. Similar age groups demography section, surveyAgeGroupsGen() adds desired age groups surveys. definition survey times done . Please note, really use monitoringSurveyTimesGen() function make sure desired survey points valid (adjust necessary) store later use cache. can inspect cache see survey times generated correctly. can notice two things: expecting 81 surveys, however 85 dates adjusted OMU adds one year (: 4 surveys) two survey period. done order ensure deployments show effect. dates adjusted match OM’s internal time steps. details , see . Furthermore, number days time steps counted simulation start simStart, 1st January 1980. recommended start simulation 20 - 50 years first survey.","code":"baseList[[\"monitoring\"]] <- list(   name = \"Quarterly Surveys\",   ## Mandatory, different from OM schema   startDate = \"2000-01-01\",   continuous = monitoringContinuousGen(     period = 1,     options = list(       name = c(\"input EIR\", \"simulated EIR\", \"human infectiousness\", \"N_v0\",                \"immunity h\", \"immunity Y\", \"new infections\",                \"num transmitting humans\", \"ITN coverage\", \"GVI coverage\", \"alpha\",                \"P_B\", \"P_C*P_D\"),       value = c(\"true\", \"true\", \"true\", \"true\", \"true\", \"true\", \"true\", \"true\",                 \"true\", \"true\", \"true\", \"false\", \"false\")     )   ),   SurveyOptions = monitoringSurveyOptionsGen(     options = list(       name = c(\"nHost\", \"nPatent\", \"nUncomp\", \"nSevere\", \"nDirDeaths\",                \"inputEIR\", \"simulatedEIR\"),       value = c(\"true\", \"true\", \"true\", \"true\", \"false\", \"true\", \"true\")     )   ) ) baseList[[\"monitoring\"]] <- c(   baseList[[\"monitoring\"]],   list(     surveys =  monitoringSurveyTimesGen(       detectionLimit = 40, startDate = \"2000-01-01\", endDate = \"2020-01-01\",       interval = \"quarterly\", simStart = \"1980-01-01\"     ),     ageGroup = surveyAgeGroupsGen(       lowerbound = 0,       upperbounds = c(5, 90)     )   ) )  str(baseList[[\"monitoring\"]], max.level = 1) #> List of 6 #>  $ name         : chr \"Quarterly Surveys\" #>  $ startDate    : chr \"2000-01-01\" #>  $ continuous   :List of 14 #>  $ SurveyOptions:List of 7 #>  $ surveys      :List of 86 #>  $ ageGroup     :List of 3 listCache() #>  #> Name: ageGroups  Timestamp: 2022-10-18 13:19:23  #> Class: list  #> Value: #>  $lowerbound #>  [1] 0 #>   #>  $upperbounds #>  [1]  5 90 #>   #>   #>  --------------------------------------------------------------------------------  #>  #> Name: simStart   Timestamp: 2022-10-18 13:19:23  #> Class: character  #> Value: #>  [1] \"1980-01-01\" #>   #>  --------------------------------------------------------------------------------  #>  #> Name: surveyTimes    Timestamp: 2022-10-18 13:19:23  #> Class: data.table data.frame  #> Value: #>      number       date   day timestep #>   1:      1 1999-12-27  7295     1459 #>   2:      2 2000-03-27  7385     1477 #>   3:      3 2000-06-30  7480     1496 #>   4:      4 2000-09-28  7570     1514 #>   5:      5 2000-12-27  7660     1532 #>   6:      6 2001-03-27  7750     1550 #>   7:      7 2001-06-30  7845     1569 #>   8:      8 2001-09-28  7935     1587 #>   9:      9 2001-12-27  8025     1605 #>  10:     10 2002-03-27  8115     1623 #>  11:     11 2002-06-30  8210     1642 #>  12:     12 2002-09-28  8300     1660 #>  13:     13 2002-12-27  8390     1678 #>  14:     14 2003-03-27  8480     1696 #>  15:     15 2003-06-30  8575     1715 #>  16:     16 2003-09-28  8665     1733 #>  17:     17 2003-12-27  8755     1751 #>  18:     18 2004-03-27  8845     1769 #>  19:     19 2004-06-30  8940     1788 #>  20:     20 2004-09-28  9030     1806 #>  21:     21 2004-12-27  9120     1824 #>  22:     22 2005-03-27  9210     1842 #>  23:     23 2005-06-30  9305     1861 #>  24:     24 2005-09-28  9395     1879 #>  25:     25 2005-12-27  9485     1897 #>  26:     26 2006-03-27  9575     1915 #>  27:     27 2006-06-30  9670     1934 #>  28:     28 2006-09-28  9760     1952 #>  29:     29 2006-12-27  9850     1970 #>  30:     30 2007-03-27  9940     1988 #>  31:     31 2007-06-30 10035     2007 #>  32:     32 2007-09-28 10125     2025 #>  33:     33 2007-12-27 10215     2043 #>  34:     34 2008-03-27 10305     2061 #>  35:     35 2008-06-30 10400     2080 #>  36:     36 2008-09-28 10490     2098 #>  37:     37 2008-12-27 10580     2116 #>  38:     38 2009-03-27 10670     2134 #>  39:     39 2009-06-30 10765     2153 #>  40:     40 2009-09-28 10855     2171 #>  41:     41 2009-12-27 10945     2189 #>  42:     42 2010-03-27 11035     2207 #>  43:     43 2010-06-30 11130     2226 #>  44:     44 2010-09-28 11220     2244 #>  45:     45 2010-12-27 11310     2262 #>  46:     46 2011-03-27 11400     2280 #>  47:     47 2011-06-30 11495     2299 #>  48:     48 2011-09-28 11585     2317 #>  49:     49 2011-12-27 11675     2335 #>  50:     50 2012-03-27 11765     2353 #>  51:     51 2012-06-30 11860     2372 #>  52:     52 2012-09-28 11950     2390 #>  53:     53 2012-12-27 12040     2408 #>  54:     54 2013-03-27 12130     2426 #>  55:     55 2013-06-30 12225     2445 #>  56:     56 2013-09-28 12315     2463 #>  57:     57 2013-12-27 12405     2481 #>  58:     58 2014-03-27 12495     2499 #>  59:     59 2014-06-30 12590     2518 #>  60:     60 2014-09-28 12680     2536 #>  61:     61 2014-12-27 12770     2554 #>  62:     62 2015-03-27 12860     2572 #>  63:     63 2015-06-30 12955     2591 #>  64:     64 2015-09-28 13045     2609 #>  65:     65 2015-12-27 13135     2627 #>  66:     66 2016-03-27 13225     2645 #>  67:     67 2016-06-30 13320     2664 #>  68:     68 2016-09-28 13410     2682 #>  69:     69 2016-12-27 13500     2700 #>  70:     70 2017-03-27 13590     2718 #>  71:     71 2017-06-30 13685     2737 #>  72:     72 2017-09-28 13775     2755 #>  73:     73 2017-12-27 13865     2773 #>  74:     74 2018-03-27 13955     2791 #>  75:     75 2018-06-30 14050     2810 #>  76:     76 2018-09-28 14140     2828 #>  77:     77 2018-12-27 14230     2846 #>  78:     78 2019-03-27 14320     2864 #>  79:     79 2019-06-30 14415     2883 #>  80:     80 2019-09-28 14505     2901 #>  81:     81 2019-12-27 14595     2919 #>  82:     82 2020-03-27 14685     2937 #>  83:     83 2020-06-30 14780     2956 #>  84:     84 2020-09-28 14870     2974 #>  85:     85 2020-12-27 14960     2992 #>      number       date   day timestep #>   #>  --------------------------------------------------------------------------------  #>  #> Name: thirdDimension     Timestamp: 2022-10-18 13:19:23  #> Class: data.table data.frame  #> Value: #>            id value name #>  1: age_group     1  0-5 #>  2: age_group     2 5-90 #>   #>  --------------------------------------------------------------------------------"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"interventions","dir":"Articles","previous_headings":"XML file generation","what":"Interventions","title":"Introduction to openMalariaUtilities","text":"section define actual measures used throughout simulation.","code":"baseList[[\"interventions\"]] <- list(   name = \"test\",   human = list(     component = list(       id = \"GVI\",       name = \"DDT test\",       GVI = list(         decay = list(           L = \"0.5\",           \"function\" = \"exponential\"         ),         anophelesParams = list(           mosquito = \"gambiae_ss\", propActive = \"1\",           deterrency = list(value = \"0.56\"),           preprandialKillingEffect = list(value = \"0\"),           postprandialKillingEffect = list(value = \"0.24\")         )       )     ),     deployment = list(       name = \"DDT test\",       component = list(id = \"GVI\"),       timed = list(         deploy = list(coverage = \"0.9\", time = \"10y\")       )     )   ) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"health-system","dir":"Articles","previous_headings":"XML file generation","what":"Health system","title":"Introduction to openMalariaUtilities","text":"","code":"baseList[[\"healthSystem\"]] <- list(   ImmediateOutcomes = list(     name = \"Tanzania ACT\",     drugRegimen = list(       firstLine = \"ACT\",       inpatient = \"QN\",       secondLine = \"ACT\"     ),     initialACR = list(       ACT = list(value = 0.85),       QN = list(value = 0.998),       selfTreatment = list(value = 0.63)     ),     compliance = list(       ACT = list(value = 0.9),       selfTreatment = list(value = 0.85)     ),     nonCompliersEffective = list(       ACT = list(value = 0),       selfTreatment = list(value = 0)     ),     treatmentActions = list(       ACT = list(         name = \"clear blood-stage infections\",         clearInfections = list(           stage = \"blood\",           timesteps = \"1\"         )       ),       QN = list(         name = \"clear blood-stage infections\",         clearInfections = list(           stage = \"blood\",           timesteps = \"1\"         )       )     ),     pSeekOfficialCareUncomplicated1 = list(value = 0.04),     pSelfTreatUncomplicated = list(value = 0.01),     pSeekOfficialCareUncomplicated2 = list(value = 0.04),     pSeekOfficialCareSevere = list(value = 0.48)   ),   CFR = list(     group = list(lowerbound = 0, value = 0.09189),     group = list(lowerbound = 0.25, value = 0.0810811),     group = list(lowerbound = 0.75, value = 0.0648649),     group = list(lowerbound = 1.5, value = 0.0689189),     group = list(lowerbound = 2.5, value = 0.0675676),     group = list(lowerbound = 3.5, value = 0.0297297),     group = list(lowerbound = 4.5, value = 0.0459459),     group = list(lowerbound = 7.5, value = 0.0945946),     group = list(lowerbound = 12.5, value = 0.1243243),     group = list(lowerbound = 15, value = 0.1378378)   ),   ## Mandatory   pSequelaeInpatient = list(     interpolation = \"none\",     group = list(lowerbound = \"0.0\", value = 0.0132),     group = list(lowerbound = \"5.0\", value = 0.005)   ) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"entomology","dir":"Articles","previous_headings":"XML file generation","what":"Entomology","title":"Introduction to openMalariaUtilities","text":"","code":"baseList[[\"entomology\"]] <- list(   mode = \"dynamic\", name = \"Namawala\",   vector = list(     anopheles = list(       mosquito = \"gambiae_ss\", propInfected = 0.078, propInfectious = \"0.021\",       seasonality = list(         annualEIR = \"16\", input = \"EIR\",         fourierSeries = list(           EIRRotateAngle = \"0\",           coeffic = list(             a = \"0.8968\", b = \"2.678\"           ),           coeffic = list(a = \"-0.4551\", b = \"2.599\")         )       ),       mosq = list(         minInfectedThreshold = \"0.001\",         mosqRestDuration = list(value = \"3\"),         extrinsicIncubationPeriod = list(value = \"11\"),         mosqLaidEggsSameDayProportion = list(value = \"0.313\"),         mosqSeekingDuration = list(value = \"0.33\"),         mosqSurvivalFeedingCycleProbability = list(value = \"0.623\"),         availability = list(distr = \"const\"),         mosqProbBiting = list(mean = \"0.95\", variance = \"0\"),         mosqProbFindRestSite = list(mean = \"0.95\", variance = \"0\"),         mosqProbResting = list(mean = \"0.99\", variance = \"0\"),         mosqProbOvipositing = list(value = \"0.88\"),         mosqHumanBloodIndex = list(value = \"0.939\")       ),       nonHumanHosts = list(         name = \"unprotectedAnimals\",         mosqRelativeEntoAvailability = list(value = \"1.0\"),         mosqProbBiting = list(value = \"0.95\"),         mosqProbFindRestSite = list(value = \"0.95\"),         mosqProbResting = list(value = \"0.99\")       )     ),     nonHumanHosts = list(name = \"unprotectedAnimals\", number = \"1.0\")   ) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"model","dir":"Articles","previous_headings":"XML file generation","what":"Model","title":"Introduction to openMalariaUtilities","text":"","code":"baseList[[\"model\"]] <- list(   ModelOptions = list(     option = list(name = \"LOGNORMAL_MASS_ACTION\", value = \"true\"),     option = list(name = \"NO_PRE_ERYTHROCYTIC\", value = \"true\"),     option = list(name = \"INNATE_MAX_DENS\", value = \"false\"),     option = list(name = \"INDIRECT_MORTALITY_FIX\", value = \"false\"),     option = list(name = \"NON_MALARIA_FEVERS\", value = \"true\")   ),   clinical = list(     healthSystemMemory = \"6\",     NonMalariaFevers = list(       incidence = list(         group = list(lowerbound = \"0\", value = \"0.322769924518357\"),         group = list(lowerbound = \"0\", value = \"0.308520194304172\"),         group = list(lowerbound = \"1\", value = \"0.279441774808493\"),         group = list(lowerbound = \"2\", value = \"0.250431781111273\"),         group = list(lowerbound = \"3\", value = \"0.223285859756841\"),         group = list(lowerbound = \"4\", value = \"0.199298352451799\"),         group = list(lowerbound = \"5\", value = \"0.179376872365614\"),         group = list(lowerbound = \"6\", value = \"0.163623659390782\"),         group = list(lowerbound = \"7\", value = \"0.152227726923469\"),         group = list(lowerbound = \"8\", value = \"0.145022785567758\"),         group = list(lowerbound = \"9\", value = \"0.141493087461765\"),         group = list(lowerbound = \"10\", value = \"0.140473293219353\"),         group = list(lowerbound = \"11\", value = \"0.141109775159515\"),         group = list(lowerbound = \"12\", value = \"0.142644475217328\"),         group = list(lowerbound = \"13\", value = \"0.144335079395766\"),         group = list(lowerbound = \"14\", value = \"0.145964032924869\"),         group = list(lowerbound = \"15\", value = \"0.147708915135714\"),         group = list(lowerbound = \"16\", value = \"0.149731543445568\"),         group = list(lowerbound = \"17\", value = \"0.151887428568276\"),         group = list(lowerbound = \"18\", value = \"0.154060663485195\"),         group = list(lowerbound = \"19\", value = \"0.156179169710494\"),         group = list(lowerbound = \"20\", value = \"0.158135015380583\"),         group = list(lowerbound = \"21\", value = \"0.159704766482219\"),         group = list(lowerbound = \"22\", value = \"0.160807788387655\"),         group = list(lowerbound = \"23\", value = \"0.161427976448279\"),         group = list(lowerbound = \"24\", value = \"0.161620429119137\"),         group = list(lowerbound = \"25\", value = \"0.16144021875986\"),         group = list(lowerbound = \"26\", value = \"0.160943264630612\"),         group = list(lowerbound = \"27\", value = \"0.160217573697398\"),         group = list(lowerbound = \"28\", value = \"0.159422614374451\"),         group = list(lowerbound = \"29\", value = \"0.158542519631641\"),         group = list(lowerbound = \"30\", value = \"0.157501217628248\"),         group = list(lowerbound = \"31\", value = \"0.156175160594841\"),         group = list(lowerbound = \"32\", value = \"0.154402302191411\"),         group = list(lowerbound = \"33\", value = \"0.152102040636481\"),         group = list(lowerbound = \"34\", value = \"0.14921450014676\"),         group = list(lowerbound = \"35\", value = \"0.145714433541659\"),         group = list(lowerbound = \"36\", value = \"0.141800502067518\"),         group = list(lowerbound = \"37\", value = \"0.137916853907569\"),         group = list(lowerbound = \"38\", value = \"0.134503529382102\"),         group = list(lowerbound = \"39\", value = \"0.131746276580642\"),         group = list(lowerbound = \"40\", value = \"0.12969902537497\"),         group = list(lowerbound = \"41\", value = \"0.128398077347679\"),         group = list(lowerbound = \"42\", value = \"0.127864136551891\"),         group = list(lowerbound = \"43\", value = \"0.12804497197004\"),         group = list(lowerbound = \"44\", value = \"0.128894055047661\"),         group = list(lowerbound = \"45\", value = \"0.130350838992718\"),         group = list(lowerbound = \"46\", value = \"0.132286605622701\"),         group = list(lowerbound = \"47\", value = \"0.134599921072495\"),         group = list(lowerbound = \"48\", value = \"0.137212726976988\"),         group = list(lowerbound = \"49\", value = \"0.140035253913284\"),         group = list(lowerbound = \"50\", value = \"0.142934573453621\"),         group = list(lowerbound = \"51\", value = \"0.145830221511879\"),         group = list(lowerbound = \"52\", value = \"0.148674810561069\"),         group = list(lowerbound = \"53\", value = \"0.151497963594518\"),         group = list(lowerbound = \"54\", value = \"0.15438856687865\"),         group = list(lowerbound = \"55\", value = \"0.157403790093505\"),         group = list(lowerbound = \"56\", value = \"0.16059513222516\"),         group = list(lowerbound = \"57\", value = \"0.16402433342886\"),         group = list(lowerbound = \"58\", value = \"0.16770481415944\"),         group = list(lowerbound = \"59\", value = \"0.171626873047865\"),         group = list(lowerbound = \"60\", value = \"0.175748327054247\"),         group = list(lowerbound = \"61\", value = \"0.180030857856799\"),         group = list(lowerbound = \"62\", value = \"0.184411365583771\"),         group = list(lowerbound = \"63\", value = \"0.188816421789366\"),         group = list(lowerbound = \"64\", value = \"0.19316997803338\"),         group = list(lowerbound = \"65\", value = \"0.197435603275487\"),         group = list(lowerbound = \"66\", value = \"0.201578808813379\"),         group = list(lowerbound = \"67\", value = \"0.205556806881398\"),         group = list(lowerbound = \"68\", value = \"0.209307183457343\"),         group = list(lowerbound = \"69\", value = \"0.212783260344084\"),         group = list(lowerbound = \"70\", value = \"0.215944154621391\"),         group = list(lowerbound = \"71\", value = \"0.218749275266548\"),         group = list(lowerbound = \"72\", value = \"0.221187990639016\"),         group = list(lowerbound = \"73\", value = \"0.223361260399378\"),         group = list(lowerbound = \"74\", value = \"0.225363436789592\"),         group = list(lowerbound = \"75\", value = \"0.227254280093211\"),         group = list(lowerbound = \"76\", value = \"0.229084576349576\"),         group = list(lowerbound = \"77\", value = \"0.230891971097789\"),         group = list(lowerbound = \"78\", value = \"0.232690225166173\"),         group = list(lowerbound = \"79\", value = \"0.234484973338876\"),         group = list(lowerbound = \"80\", value = \"0.236276361586796\"),         group = list(lowerbound = \"81\", value = \"0.238064394629696\"),         group = list(lowerbound = \"82\", value = \"0.239849077182917\"),         group = list(lowerbound = \"83\", value = \"0.241630413957381\"),         group = list(lowerbound = \"84\", value = \"0.243408409659591\"),         group = list(lowerbound = \"85\", value = \"0.245183068991633\"),         group = list(lowerbound = \"86\", value = \"0.246954396651183\"),         group = list(lowerbound = \"87\", value = \"0.248722397331501\"),         group = list(lowerbound = \"88\", value = \"0.250487075721441\"),         group = list(lowerbound = \"89\", value = \"0.252248436505447\"),         group = list(lowerbound = \"90\", value = \"0.253127874257909\")       )     )   ),   human = list(     availabilityToMosquitoes = list(       group = list(lowerbound = \"0\", value = \"0.7076\"),       group = list(lowerbound = \"0\", value = \"0.8538\"),       group = list(lowerbound = \"5\", value = \"1.0\"),       group = list(lowerbound = \"5\", value = \"1.0\")     )   ),   parameters = list(     interval = \"5\", iseed = \"1\", latentp = \"3\",     parameter = list(include = \"false\", name = \"'-ln(1-Sinf)'\", number = \"1\", value = \"0.050736\"),     parameter = list(include = \"false\", name = \"Estar\", number = \"2\", value = \"0.03247\"),     parameter = list(include = \"false\", name = \"Simm\", number = \"3\", value = \"0.138161050830301\"),     parameter = list(include = \"false\", name = \"Xstar_p\", number = \"4\", value = \"1514.385853233699891\"),     parameter = list(include = \"false\", name = \"gamma_p\", number = \"5\", value = \"2.03692533424484\"),     parameter = list(include = \"false\", name = \"sigma2i\", number = \"6\", value = \"10.173598698525799\"),     parameter = list(include = \"false\", name = \"CumulativeYstar\", number = \"7\", value = \"35158523.31132510304451\"),     parameter = list(include = \"false\", name = \"CumulativeHstar\", number = \"8\", value = \"97.334652723897705\"),     parameter = list(include = \"false\", name = \"'-ln(1-alpha_m)'\", number = \"9\", value = \"2.33031045876193\"),     parameter = list(include = \"false\", name = \"decay_m\", number = \"10\", value = \"2.53106547375805\"),     parameter = list(include = \"false\", name = \"sigma2_0\", number = \"11\", value = \"0.655747311168152\"),     parameter = list(include = \"false\", name = \"Xstar_v\", number = \"12\", value = \"0.916181104713054\"),     parameter = list(include = \"false\", name = \"Ystar2\", number = \"13\", value = \"6502.26335600001039\"),     parameter = list(include = \"false\", name = \"alpha\", number = \"14\", value = \"142601.912520000012591\"),     parameter = list(include = \"false\", name = \"Density bias (non Garki)\", number = \"15\", value = \"0.177378570987455\"),     parameter = list(include = \"false\", name = \"        sigma2        \", number = \"16\", value = \"0.05\"),     parameter = list(include = \"false\", name = \"log oddsr CF community\", number = \"17\", value = \"0.736202\"),     parameter = list(include = \"false\", name = \"Indirect risk cofactor\", number = \"18\", value = \"0.018777338\"),     parameter = list(include = \"false\", name = \"Non-malaria infant mortality\", number = \"19\", value = \"49.539046599999999\"),     parameter = list(include = \"false\", name = \"Density bias (Garki)\", number = \"20\", value = \"4.79610772546704\"),     parameter = list(include = \"false\", name = \"Severe Malaria Threshhold\", number = \"21\", value = \"784455.599999999976717\"),     parameter = list(include = \"false\", name = \"Immunity Penalty\", number = \"22\", value = \"1\"),     parameter = list(include = \"false\", name = \"Immune effector decay\", number = \"23\", value = \"0\"),     parameter = list(include = \"false\", name = \"comorbidity intercept\", number = \"24\", value = \"0.0968\"),     parameter = list(include = \"false\", name = \"Ystar half life\", number = \"25\", value = \"0.275437402\"),     parameter = list(include = \"false\", name = \"Ystar1\", number = \"26\", value = \"0.596539864\"),     parameter = list(include = \"false\", name = \"Asexual immunity decay\", number = \"27\", value = \"0\"),     parameter = list(include = \"false\", name = \"Ystar0\", number = \"28\", value = \"296.302437899999973\"),     parameter = list(include = \"false\", name = \"Idete multiplier\", number = \"29\", value = \"2.797523626\"),     parameter = list(include = \"false\", name = \"critical age for comorbidity\", number = \"30\", value = \"0.117383\")   ) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"prepare-to-run-the-simulations","dir":"Articles","previous_headings":"","what":"Prepare to run the simulations","title":"Introduction to openMalariaUtilities","text":"setupDirs() creates experiment folder given argument project directory. also includes sub-folders mentioned introduction . can verify checking layout experiment directory. setupOM() make sure required files Open Malaria run place. includes correct .xsd schema file (according specified OM version) well supplementary files.","code":"## Setup dirs setupDirs(experimentName = \"exp_test\", replace = TRUE)  ## Copy necessary Open Malaria files. setupOM() list.dirs(\"exp_test\") #> [1] \"exp_test\"                 \"exp_test/cache\"           #> [3] \"exp_test/logs\"            \"exp_test/logs/scenarios\"  #> [5] \"exp_test/logs/simulation\" \"exp_test/outputs\"         #> [7] \"exp_test/scenarios\" list.files(\"exp_test\") #> [1] \"autoRegressionParameters.csv\" \"cache\"                        #> [3] \"densities.csv\"                \"logs\"                         #> [5] \"outputs\"                      \"scenario_44.xsd\"              #> [7] \"scenarios\""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"create-xml-file","dir":"Articles","previous_headings":"","what":"Create XML file","title":"Introduction to openMalariaUtilities","text":"name implies, createBaseXml() translate input list XML document write disk.","code":"## Create base XML file createBaseXml(baseList, replace = TRUE) #> Warning in createBaseXml(baseList, replace = TRUE): startDate 2000-01-01 is not #> the same as simStart 1980-01-01. This can cause survey times to not appear! readLines(file(\"exp_test/exp_test_base.xml\", \"r\"), n = 10) #>  [1] \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"                                                                                                                                                                                                           #>  [2] \"<om:scenario xmlns:om=\\\"http://openmalaria.org/schema/scenario_44\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" name=\\\"exp_test\\\" schemaVersion=\\\"44\\\" xsi:schemaLocation=\\\"http://openmalaria.org/schema/scenario_44 scenario_44.xsd\\\">\" #>  [3] \"  <demography name=\\\"Ifakara\\\" popSize=\\\"4000\\\" maximumAgeYrs=\\\"90\\\">\"                                                                                                                                                                                #>  [4] \"    <ageGroup lowerbound=\\\"0\\\">\"                                                                                                                                                                                                                      #>  [5] \"      <group poppercent=\\\"3.474714994\\\" upperbound=\\\"1\\\"/>\"                                                                                                                                                                                           #>  [6] \"      <group poppercent=\\\"12.76004028\\\" upperbound=\\\"5\\\"/>\"                                                                                                                                                                                           #>  [7] \"      <group poppercent=\\\"14.52151394\\\" upperbound=\\\"10\\\"/>\"                                                                                                                                                                                          #>  [8] \"      <group poppercent=\\\"12.75565434\\\" upperbound=\\\"15\\\"/>\"                                                                                                                                                                                          #>  [9] \"      <group poppercent=\\\"10.83632374\\\" upperbound=\\\"20\\\"/>\"                                                                                                                                                                                          #> [10] \"      <group poppercent=\\\"8.393312454\\\" upperbound=\\\"25\\\"/>\""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"run-simulations","dir":"Articles","previous_headings":"","what":"Run simulations","title":"Introduction to openMalariaUtilities","text":"order run simulation, can simply call runSimulations(). default, output R console fairly minimal. detailed logs can found logs/simulation folder. Open Malaria generates two output files placed outputs folder: *_cts.txt file *_out.txt file *_out.txt file usually file interested , contains measurement data survey defined input list. See information.","code":"## Run simulations runSimulations() #> [1] \"Running scenario [1/1]\" list.files(\"exp_test/logs/simulation\") #> [1] \"exp_test_base.log\" read.table(\"exp_test/outputs/exp_test_base_cts.txt\", header = TRUE, sep = \"\\t\", skip = 1, nrows = 10) #>    timestep  input.EIR simulated.EIR human.infectiousness N_v0.gambiae_ss. #> 1         0 0.00995606    0.00995049            0.0179202          30147.4 #> 2         1 0.01958060    0.15390600            0.0175667          39181.0 #> 3         2 0.03850920    0.24658900            0.0171114          46368.5 #> 4         3 0.07460740    0.37191900            0.0167741          49838.5 #> 5         4 0.14030700    0.52390000            0.0164523          48641.0 #> 6         5 0.25256000    0.68747000            0.0165751          43197.7 #> 7         6 0.42953400    0.84148200            0.0188351          35064.0 #> 8         7 0.68226100    0.96738200            0.0231314          26185.7 #> 9         8 1.00214000    1.07333000            0.0296558          18146.4 #> 10        9 1.35047000    1.18202000            0.0377866          11790.1 #>    immunity.h immunity.Y new.infections num.transmitting.humans ITN.coverage #> 1     256.846   11899700              0                    2613            0 #> 2     256.817   11900500            400                    2590            0 #> 3     256.856   11895200            692                    2572            0 #> 4     256.934   11896300           1054                    2549            0 #> 5     257.109   11897600           1469                    2526            0 #> 6     257.299   11899200           1795                    2507            0 #> 7     257.791   11901800           2250                    2636            0 #> 8     258.367   11903800           2643                    2798            0 #> 9     259.013   11904600           2987                    3019            0 #> 10    259.681   11909900           3256                    3280            0 #>    GVI.coverage alpha_i.gambiae_ss. #> 1             0         0.000206347 #> 2             0         0.000206342 #> 3             0         0.000206349 #> 4             0         0.000206332 #> 5             0         0.000206344 #> 6             0         0.000206344 #> 7             0         0.000206347 #> 8             0         0.000206338 #> 9             0         0.000206330 #> 10            0         0.000206329 read.table(\"exp_test/outputs/exp_test_base_out.txt\", header = FALSE, sep = \"\\t\", nrows = 10) #>    V1 V2 V3          V4 #> 1   1  1  0 6.07000e+02 #> 2   1  2  0 3.39300e+03 #> 3   1  1  3 1.37000e+02 #> 4   1  2  3 1.15500e+03 #> 5   1  1 14 3.35770e+04 #> 6   1  2 14 2.94240e+04 #> 7   1  1 15 7.11000e+02 #> 8   1  2 15 4.80000e+01 #> 9   1  0 35 2.19321e-01 #> 10  1  0 36 2.87284e-01"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/articles/openmalariautilities.html","id":"read-results","dir":"Articles","previous_headings":"","what":"Read results","title":"Introduction to openMalariaUtilities","text":"can bit difficult interpret Open Malaria’s output files, thus OMU provides helper function reads output file assigns column names translates certain values (e.g. survey dates).","code":"outfile <- readOutputFile(\"exp_test/outputs/exp_test_base_out.txt\") head(outfile) #>    survey_date third_dimension measure value #> 1:  1999-12-27               1   nHost   607 #> 2:  1999-12-27               2   nHost  3393 #> 3:  1999-12-27               1 nPatent   137 #> 4:  1999-12-27               2 nPatent  1155 #> 5:  1999-12-27               1 nUncomp 33577 #> 6:  1999-12-27               2 nUncomp 29424"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roland Goers. Author, maintainer. Christian Selinger. Author. Emilie Pothin. Author. Munir Winkel. Author. Lucas Tittmann. Contributor, consultant.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goers R, Selinger C, Pothin E, Winkel M (2022). openMalariaUtilities: Helper functions provide easier usage Open Malaria R. https://swisstph.github.io/r-openMalariaUtilities, https://github.com/SwissTPH/r-openMalariaUtilities.","code":"@Manual{,   title = {openMalariaUtilities: Helper functions to provide easier usage of Open Malaria from R},   author = {Roland Goers and Christian Selinger and Emilie Pothin and Munir Winkel},   year = {2022},   note = {https://swisstph.github.io/r-openMalariaUtilities, https://github.com/SwissTPH/r-openMalariaUtilities}, }"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/index.html","id":"openmalariautilities","dir":"","previous_headings":"","what":"Helper functions to provide easier usage of Open Malaria from R","title":"Helper functions to provide easier usage of Open Malaria from R","text":"Helper functions provide easier usage OpenMalaria R","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/index.html","id":"install-instructions","dir":"","previous_headings":"","what":"Install instructions","title":"Helper functions to provide easier usage of Open Malaria from R","text":"CRAN release currently available. can install either tagged version via Replace TAG tag want use, e.g. “22.10”. want use latest development version master, please use V2-stable historical branch can installed via","code":"devtools::install_github(\"SwissTPH/r-openMalariaUtilities\", ref = \"TAG\") devtools::install_github(\"SwissTPH/r-openMalariaUtilities\") devtools::install_github(\"SwissTPH/r-openMalariaUtilities\", ref = \"V2-stable\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Helper functions to provide easier usage of Open Malaria from R","text":"order package work, please make sure correctly installed OpenMalaria SQLite 3 system.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/BEN.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Benin — BEN","title":"Demographic data from Benin — BEN","text":"dataset demographic data Benin. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/BEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Benin — BEN","text":"","code":"BEN"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/BEN.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Benin — BEN","text":"object class data.frame 18 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/CMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Cameroon — CMR","title":"Demographic data from Cameroon — CMR","text":"dataset demographic data Cameroon. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/CMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Cameroon — CMR","text":"","code":"CMR"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/CMR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Cameroon — CMR","text":"object class data.frame 20 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/GHA.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Ghana — GHA","title":"Demographic data from Ghana — GHA","text":"dataset demographic data Ghana. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/GHA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Ghana — GHA","text":"","code":"GHA"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/GHA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Ghana — GHA","text":"object class data.frame 20 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/HTI.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Haiti — HTI","title":"Demographic data from Haiti — HTI","text":"dataset demographic data Haiti. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/HTI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Haiti — HTI","text":"","code":"HTI"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/HTI.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Haiti — HTI","text":"object class data.frame 18 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/MOZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Mozambique — MOZ","title":"Demographic data from Mozambique — MOZ","text":"dataset demographic data Mozambique. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/MOZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Mozambique — MOZ","text":"","code":"MOZ"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/MOZ.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Mozambique — MOZ","text":"object class data.frame 17 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/TZA.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Tanzania — TZA","title":"Demographic data from Tanzania — TZA","text":"dataset demographic data Tanzania. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/TZA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Tanzania — TZA","text":"","code":"TZA"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/TZA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Tanzania — TZA","text":"object class data.frame 19 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/UGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographic data from Uganda — UGA","title":"Demographic data from Uganda — UGA","text":"dataset demographic data Uganda. variables follows:","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/UGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographic data from Uganda — UGA","text":"","code":"UGA"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/UGA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographic data from Uganda — UGA","text":"object class data.frame 20 rows 2 columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/ageGroupsGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'demography/ageGroup' — ageGroupsGen","title":"Generate list for 'demography/ageGroup' — ageGroupsGen","text":"Generate list 'demography/ageGroup'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/ageGroupsGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'demography/ageGroup' — ageGroupsGen","text":"","code":"ageGroupsGen(lowerbound, ageGroups)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/ageGroupsGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'demography/ageGroup' — ageGroupsGen","text":"lowerbound Double, lower bound age group ageGroups Data frame containing demography","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/ageGroupsGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate list for 'demography/ageGroup' — ageGroupsGen","text":"List xml contruction","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSCFRGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'changeHS/CFR' — changeHSCFRGen","title":"Generate list for 'changeHS/CFR' — changeHSCFRGen","text":"Generate list 'changeHS/CFR'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSCFRGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'changeHS/CFR' — changeHSCFRGen","text":"","code":"changeHSCFRGen(interpolation = NULL, ageGroups)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSCFRGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'changeHS/CFR' — changeHSCFRGen","text":"interpolation Value interpolation ageGroups Data frame","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSpSeqInGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'changeHS/SpSeq' — changeHSpSeqInGen","title":"Generate list for 'changeHS/SpSeq' — changeHSpSeqInGen","text":"Generate list 'changeHS/SpSeq'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSpSeqInGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'changeHS/SpSeq' — changeHSpSeqInGen","text":"","code":"changeHSpSeqInGen(interpolation = NULL, ageGroups)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/changeHSpSeqInGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'changeHS/SpSeq' — changeHSpSeqInGen","text":"interpolation Value interpolation ageGroups Data frame","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/cleanLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean log directories — cleanLogs","title":"Clean log directories — cleanLogs","text":"Clean log directories","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/cleanLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean log directories — cleanLogs","text":"","code":"cleanLogs(aggregate = TRUE, compress = TRUE)  clean_logs(aggregate = TRUE, compress = TRUE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/cleanLogs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean log directories — cleanLogs","text":"aggregate TRUE, aggregate files single one. compress TRUE, use create zip archive per directory.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/cleanupExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup an experiment — cleanupExperiment","title":"Cleanup an experiment — cleanupExperiment","text":"Cleaning includes aggregation compression log files, well XML files scenarios folder output files Open Malaria.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/cleanupExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup an experiment — cleanupExperiment","text":"","code":"cleanupExperiment()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/clearCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all objects from cache. — clearCache","title":"Remove all objects from cache. — clearCache","text":"Remove objects cache.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/clearCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all objects from cache. — clearCache","text":"","code":"clearCache()  clear_cache()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/collectResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Open Malaria results into a database — collectResults","title":"Collect Open Malaria results into a database — collectResults","text":"Collect Open Malaria results database","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/collectResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Open Malaria results into a database — collectResults","text":"","code":"collectResults(   expDir,   dbName,   dbDir = NULL,   replace = FALSE,   resultsName = \"results\",   resultsCols = list(names = c(\"scenario_id\", \"survey_date\", \"third_dimension\",     \"measure\", \"value\"), types = c(\"INTEGER\", \"TEXT\", \"\", \"TEXT\", \"NUMERIC\")),   indexOn = list(c(\"results\", \"scenario_id\")),   ncores = 1,   ncoresDT = 1,   strategy = \"serial\",   appendResults = FALSE,   fileFun = NULL,   fileFunArgs = NULL,   readFun = NULL,   readFunArgs = NULL,   aggrFun = NULL,   aggrFunArgs = NULL )  collect_results(   expDir,   dbName,   dbDir = NULL,   replace = FALSE,   resultsName = \"results\",   resultsCols = list(names = c(\"scenario_id\", \"survey_date\", \"third_dimension\",     \"measure\", \"value\"), types = c(\"INTEGER\", \"TEXT\", \"\", \"TEXT\", \"NUMERIC\")),   indexOn = list(c(\"results\", \"scenario_id\")),   ncores = 1,   ncoresDT = 1,   strategy = \"serial\",   appendResults = FALSE,   fileFun = NULL,   fileFunArgs = NULL,   readFun = NULL,   readFunArgs = NULL,   aggrFun = NULL,   aggrFunArgs = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/collectResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Open Malaria results into a database — collectResults","text":"expDir Database connection. dbName Name database file without extension. dbDir Directory database file. Defaults root directory. replace TRUE, replace exisiting database name dbName. Else, try append date exisiting database. resultsName Name database table add results . resultsCols list containing column names column types results table. example, list(names = c(\"scenario_id\", ...), types = c(\"INTEGER\", ...)). \"experiment_id\" added automatically. Types available SQLite. indexOn Define index create. Needs lis form list(c(TABLE, COLUMN), c(TABLE, COLUMN), ...). ncores Number CPU cores use. ncoresDT Number data.table threads use parallel cluster. strategy Defines process files. \"batch\" means files read single data frame first, aggregation funciton applied data frame result added database. \"serial\" means individual file processed aggregation function added database. appendResults TRUE, add metadata database write results. fileFun function filtering input files. Needs return vector scenario XML files without path file column scenario data frame. default. fileFunArgs Arguments fileFun (named) list. readFun function reading processing OpenMalaria output files. Needs return data frame. first argument needs file name needs ... argument. Scenario IDs available using scenID argument. NULL, defaults readOutputFile scenario IDs added automatically. readFunArgs Arguments readFun (named) list. aggrFun function aggregating output readFun. First argument needs output data frame readFun needs generate data frame. data frame contain experiment_id column added automatically. column names needs match ones defined resultsCols. aggrFunArgs Arguments aggrFun (named) list.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/createBaseXml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base XML file and folder structure — createBaseXml","title":"Create a base XML file and folder structure — createBaseXml","text":"Processes list containing required information generate base XML file OpenMalaria. file used generate scenarios simulation.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/createBaseXml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base XML file and folder structure — createBaseXml","text":"","code":"createBaseXml(data = NULL, replace = \"ask\")  create_base_xml(data = NULL, replace = \"ask\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/createBaseXml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base XML file and folder structure — createBaseXml","text":"data List containing information replace Overwrite output XML already present. Possible values TRUE, FALSE, \"ask\".","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/createBaseXml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a base XML file and folder structure — createBaseXml","text":"'data' argument nested list resembling input XML OpenMalaria. attribute names possible values can found OpenMalaria's schema documentation. attributes part official schema, like 'expName'. details can found vignette.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineChangeHS.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the case management deployments — defineChangeHS","title":"Write the case management deployments — defineChangeHS","text":"Write case management deployments","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineChangeHS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the case management deployments — defineChangeHS","text":"","code":"defineChangeHS(   baseList,   name = \"Change in case management\",   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL,   initACT = 1,   initQN = 1,   initSelf = 1,   compACT = 1,   compQN = 1,   compSelf = 1,   pSeekOfficialCareUncomplicated1,   pSelfTreatUncomplicated = 0.01821375,   pSeekOfficialCareUncomplicated2,   pSeekOfficialCareSevere = 0.48 )  define_changeHS(   baseList,   name = \"Change in case management\",   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL,   initACT = 1,   initQN = 1,   initSelf = 1,   compACT = 1,   compQN = 1,   compSelf = 1,   pSeekOfficialCareUncomplicated1,   pSelfTreatUncomplicated = 0.01821375,   pSeekOfficialCareUncomplicated2,   pSeekOfficialCareSevere = 0.48 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineChangeHS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the case management deployments — defineChangeHS","text":"baseList List experiment data. name Name intervention startDate Date YYYY-MM-DD format. endDate Date YYYY-MM-DD format. interval string like '1 weeks'. seq.Date(). list composed entries 'days' (optional), 'months' (optional) 'years'. list used, startDate endDate used can NULL. dates NULL, startDate, endDate interval used, else vector dates YYYY-MM-DD format. Can placeholder. initACT Initial artemisinine combination therapy. Can placeholder. initQN Initial quinine. Can placeholder. initSelf Initial probability self-treatment. Can placeholder. compACT Compliance artemisinine combination therapy. Can placeholder. compQN Compliance quinine. Can placeholder. compSelf Compliance self-treatment. Can placeholder. pSeekOfficialCareUncomplicated1 Probability patient newly incident uncomplicated disease seeks official care. Can placeholder. pSelfTreatUncomplicated Probability patient uncomplicated disease without recent history disease (.e. first line) self-treat. Can placeholder. pSeekOfficialCareUncomplicated2 Probability patient recurrence uncomplicated disease seeks official care. Can placeholder. pSeekOfficialCareSevere Probability patient severe disease obtains appropriate care. Can placeholder.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineDemography.html","id":null,"dir":"Reference","previous_headings":"","what":"Define and write demography input to baseList — defineDemography","title":"Define and write demography input to baseList — defineDemography","text":"Define write demography input baseList","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineDemography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define and write demography input to baseList — defineDemography","text":"","code":"defineDemography(   baseList,   name,   popSize = 3000,   maximumAgeYrs,   growthRate = NULL,   lowerbound,   poppercent,   upperbound )  define_demography(   baseList,   name,   popSize = 3000,   maximumAgeYrs,   growthRate = NULL,   lowerbound,   poppercent,   upperbound )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineDemography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define and write demography input to baseList — defineDemography","text":"baseList List experiment data. name Name demography data. popSize Population size. maximumAgeYrs Maximum age simulated humans years. growthRate Growth rate human population. lowerbound Lower bound age group. poppercent Percentage human population age group. Must numerical vector. upperbound Upper bound age group. Must numerical vector.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineEntomology.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines entomology setting — defineEntomology","title":"Defines entomology setting — defineEntomology","text":"Defines entomology setting","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineEntomology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines entomology setting — defineEntomology","text":"","code":"defineEntomology(   baseList,   seasonalityParameters,   mosquitoParameters,   mode = \"dynamic\",   name = \"Namawala\",   scaledAnnualEIR = NULL,   verbose = FALSE,   append = TRUE )  define_entomology(   baseList,   seasonalityParameters,   mosquitoParameters,   mode = \"dynamic\",   name = \"Namawala\",   scaledAnnualEIR = NULL,   verbose = FALSE,   append = TRUE )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineEntomology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines entomology setting — defineEntomology","text":"baseList List experiment data. seasonalityParameters Seasonality parameterization. mosquitoParameters Mosquito bionomics parameterization list different mosquito species obtained AnophelesModel package function get_OM_ento_snippet mode Dynamic static name Name setting scaledAnnualEIR NULL, annualEIR rescaled numeric verbose TRUE, print detailed output. append TRUE, append existing baseList, otherwise overwrite","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineEntomology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines entomology setting — defineEntomology","text":"","code":"mosquitoParameters=list(\"Anopheles gambiae\"=list(   mosqRestDuration=list(value=\"2\"),   extrinsicIncubationPeriod=list(value=\"10\"),   mosqLaidEggsSameDayProportion=list(value=\"0.589\"),   mosqSeekingDuration=list(value=\"3\"),   mosqSurvivalFeedingCycleProbability=list(value=\"0.75\"),   mosqProbBiting=list(mean=\"0.95\",                       variance=\"0\"),   mosqProbFindRestSite=list(mean=\"0.95\",                             variance=\"0\"),   mosqProbResting=list(mean=\"0.99\",                        variance=\"0\"),    mosqProbOvipositing=list(mean=\"0.88\"),   mosqHumanBloodIndex=list(mean=\"0.6243\")))"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineHealthSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the health system part — defineHealthSystem","title":"Writes the health system part — defineHealthSystem","text":"Writes health system part","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineHealthSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the health system part — defineHealthSystem","text":"","code":"defineHealthSystem(   baseList,   name = \"Tanzania ACT\",   initACT = 1,   initQN = 1,   initSelf = 1,   compACT = 1,   compQN = 1,   compSelf = 1,   pSeekOfficialCareUncomplicated1,   pSelfTreatUncomplicated = 0.01821375,   pSeekOfficialCareUncomplicated2,   pSeekOfficialCareSevere = 0.48 )  define_health_system(   baseList,   name = \"Tanzania ACT\",   initACT = 1,   initQN = 1,   initSelf = 1,   compACT = 1,   compQN = 1,   compSelf = 1,   pSeekOfficialCareUncomplicated1,   pSelfTreatUncomplicated = 0.01821375,   pSeekOfficialCareUncomplicated2,   pSeekOfficialCareSevere = 0.48 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineHealthSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the health system part — defineHealthSystem","text":"baseList List experiment data. name Name health system initACT Initial artemisinine combination therapy. initQN Initial quinine. initSelf Initial probability self-treatment. compACT Compliance artemisinine combination therapy. compQN Compliance quinine. compSelf Compliance self-treatment. pSeekOfficialCareUncomplicated1 Probability patient newly incident uncomplicated disease seeks official care. pSelfTreatUncomplicated Probability patient uncomplicated disease without recent history disease (.e. first line) self-treat. pSeekOfficialCareUncomplicated2 Probability patient recurrence uncomplicated disease seeks official care. pSeekOfficialCareSevere Probability patient severe disease obtains appropriate care.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineIRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds the IRS intervention parameterisation — defineIRS","title":"Adds the IRS intervention parameterisation — defineIRS","text":"Adds IRS intervention parameterisation","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineIRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds the IRS intervention parameterisation — defineIRS","text":"","code":"defineIRS(   baseList,   mosquitos,   component = c(\"Actellic50EC\", \"Actellic300CS\", \"Actellic11\", \"Actellic8\", \"Actellic80\",     \"magic_actellic\", \"IRS4\", \"IRS6\", \"IRS8\", \"Bendiocarb\", \"nothing\"),   noeffect = \"outdoor\",   steplife = NULL )  define_IRS(   baseList,   mosquitos,   component = c(\"Actellic50EC\", \"Actellic300CS\", \"Actellic11\", \"Actellic8\", \"Actellic80\",     \"magic_actellic\", \"IRS4\", \"IRS6\", \"IRS8\", \"Bendiocarb\", \"nothing\"),   noeffect = \"outdoor\",   steplife = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineIRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds the IRS intervention parameterisation — defineIRS","text":"baseList List experiment data. mosquitos Mosquito species affected intervention. component Insecticde use. automatically specify efficacy effect duration. Needs predefined choices. noeffect Pattern defines mosquitoes unaffected intervention. Can \"outdoor\", \"indoor\" NULL. steplife Step function decay, number months effective.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineITN.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the ITN intervention parameterisation xml chunk — defineITN","title":"Writes the ITN intervention parameterisation xml chunk — defineITN","text":"Writes ITN intervention parameterisation xml chunk","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineITN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the ITN intervention parameterisation xml chunk — defineITN","text":"","code":"defineITN(   baseList,   component = \"histITN\",   noeffect = \"outdoor\",   mosquitos,   halflife = 2,   resist = TRUE,   historical = FALSE,   strong = FALSE )  define_ITN(   baseList,   component = \"histITN\",   noeffect = \"outdoor\",   mosquitos,   halflife = 2,   resist = TRUE,   historical = FALSE,   strong = FALSE )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineITN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the ITN intervention parameterisation xml chunk — defineITN","text":"baseList List experiment data. component Name intervention, can name needs defined deployment. noeffect mosquitoes unaffected intervention? mosquitos Name mosquito species affected intervention halflife Attrition nets years resist TRUE, pyrethroid resistance assumed (default percentage..?) historical Used historical intervention coverage? strong !strong !resist, \"Pitoa\" parameter LLIN","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineImportedInfections.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes importation intervention — defineImportedInfections","title":"Writes importation intervention — defineImportedInfections","text":"Models importation P. falciparum infections directly humans external source. infections, inoculations EIR imported.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineImportedInfections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes importation intervention — defineImportedInfections","text":"","code":"defineImportedInfections(   baseList,   name = \"importedInfections\",   value = 10,   time = 0 )  define_importedInfections(   baseList,   name = \"importedInfections\",   value = 10,   time = 0 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineImportedInfections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes importation intervention — defineImportedInfections","text":"baseList List experiment data. name Name intervention. value Number imported infections per 1000. time Rate importation, 0, constant importation rate since beginning.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineLarv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes the larviciding component — defineLarv","title":"Function that writes the larviciding component — defineLarv","text":"Function writes larviciding component","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineLarv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes the larviciding component — defineLarv","text":"","code":"defineLarv(   baseList,   mosquitos,   component = \"LSM\",   coverage = \"@futLSMcov@\",   decayVals = list(L = 0.25, k = NULL, funct = \"step\"),   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL )  define_larv(   baseList,   mosquitos,   component = \"LSM\",   coverage = \"@futLSMcov@\",   decayVals = list(L = 0.25, k = NULL, funct = \"step\"),   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineLarv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes the larviciding component — defineLarv","text":"baseList List experiment data. mosquitos Names mosquito species simulate. component Name vector population intervention (.e. LSM). coverage variable numeric value. Can placeholder. decayVals Decay (specified, constant effectiveness, step function default) startDate Date YYYY-MM-DD format. endDate Date YYYY-MM-DD format. interval string like '1 weeks'. seq.Date(). list composed entries 'days' (optional), 'months' (optional) 'years'. list used, startDate endDate used can NULL. dates NULL, startDate, endDate interval used, else vector dates YYYY-MM-DD format. Can placeholder.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineNothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes an intervention parameterisation xml chunk that does nothing — defineNothing","title":"Writes an intervention parameterisation xml chunk that does nothing — defineNothing","text":"useful something needs deployed, placeholder.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineNothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes an intervention parameterisation xml chunk that does nothing — defineNothing","text":"","code":"defineNothing(baseList, mosquitos)  define_nothing(baseList, mosquitos)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineNothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes an intervention parameterisation xml chunk that does nothing — defineNothing","text":"baseList List experiment data. mosquitos Name mosquito species affected intervention.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineTreatSimple.html","id":null,"dir":"Reference","previous_headings":"","what":"SMC, MDA parameterization section — defineTreatSimple","title":"SMC, MDA parameterization section — defineTreatSimple","text":"Writes treatSimple intervention used mass treatments (.e. MDA, SMC)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineTreatSimple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SMC, MDA parameterization section — defineTreatSimple","text":"","code":"defineTreatSimple(   baseList,   component = \"MDA\",   durationBlood = \"15d\",   durationLiver = 0 )  define_treatSimple(   baseList,   component = \"MDA\",   durationBlood = \"15d\",   durationLiver = 0 )  define_treatSimple_compat(   baseList,   component = \"MDA\",   durationBlood = \"15d\",   durationLiver = 0 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineTreatSimple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SMC, MDA parameterization section — defineTreatSimple","text":"baseList List experiment data. component Name intervention, can name needs defined deployment durationBlood Clearance blood stage parasites durationLiver Clearance liver stage parasites","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVaccine.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds vaccine intervention parameterisation to baseList — defineVaccine","title":"Adds vaccine intervention parameterisation to baseList — defineVaccine","text":"Adds vaccine intervention parameterisation baseList","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVaccine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds vaccine intervention parameterisation to baseList — defineVaccine","text":"","code":"defineVaccine(   baseList,   vaccineParameterization,   append = TRUE,   name = NULL,   verbatim = FALSE,   hist = FALSE )  define_vaccine(   baseList,   vaccineParameterization,   append = TRUE,   name = NULL,   verbatim = FALSE,   hist = FALSE )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVaccine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds vaccine intervention parameterisation to baseList — defineVaccine","text":"baseList List experiment data. vaccineParameterization Parameterization list append TRUE, append existing baseList, otherwise overwrites name Name tag list verbatim TRUE, show messages hist TRUE, decay assumed step function set 1 year zero remainder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVectorControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds vector control intervention parameterisation to baseList — defineVectorControl","title":"Adds vector control intervention parameterisation to baseList — defineVectorControl","text":"Adds vector control intervention parameterisation baseList","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVectorControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds vector control intervention parameterisation to baseList — defineVectorControl","text":"","code":"defineVectorControl(   baseList,   vectorInterventionParameters,   append = TRUE,   name = NULL,   verbatim = FALSE,   hist = FALSE,   resistance = 0.1 )  define_vector_control(   baseList,   vectorInterventionParameters,   append = TRUE,   name = NULL,   verbatim = FALSE,   hist = FALSE,   resistance = 0.1 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVectorControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds vector control intervention parameterisation to baseList — defineVectorControl","text":"baseList List experiment data. vectorInterventionParameters Vector control intervention parameterization list depending three parameters (deterrency, preprandrial, postprandial) decay functions: append TRUE, append existing baseList, otherwise overwrites name Name tag list verbatim TRUE, show messages hist TRUE, decay assumed step function set 1 year zero remainder resistance Scaling function insecticide resistance TODO","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/defineVectorControl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds vector control intervention parameterisation to baseList — defineVectorControl","text":"","code":"vectorInterventionParameters <- list(   \"LLIN\" = list(     deterrency = list(       decay = list(         L = \"0.7\",         \"function\" = \"weibull\"       ),       anophelesParams = list(         \"Anopheles gambiae\" = list(           propActive = 1,           value = \"0.5\"         ),         \"Anopheles funestus\" = list(           propActive = 1,           value = \"0.3\"         )       )     ),     preprandialKillingEffect = list(       decay = list(         L = \"0.4\",         \"function\" = \"weibull\"       ),       anophelesParams = list(         \"Anopheles gambiae\" = list(           propActive = 1,           value = \"0.6\"         ),         \"Anopheles funestus\" = list(           propActive = 1,           value = \"0.67\"         )       )     ),     postprandialKillingEffect = list(       decay = list(         L = \"0.45\",         \"function\" = \"weibull\"       ),       anophelesParams = list(         \"Anopheles gambiae\" = list(           propActive = 1,           value = \"0.3\"         ),         \"Anopheles funestus\" = list(           propActive = 1,           value = \"0.2\"         )       )     )   ) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_IRS_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds the IRS intervention parameterisation. Compatibility version. — define_IRS_compat","title":"Adds the IRS intervention parameterisation. Compatibility version. — define_IRS_compat","text":"Adds IRS intervention parameterisation. Compatibility version.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_IRS_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds the IRS intervention parameterisation. Compatibility version. — define_IRS_compat","text":"","code":"define_IRS_compat(   baseList,   mosqs,   component = \"Actellic50EC\",   noeffect = \"outdoor\",   steplife = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_IRS_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds the IRS intervention parameterisation. Compatibility version. — define_IRS_compat","text":"baseList List experiment data. mosqs Mosquito species affected intervention. component Insecticde use. automatically specify efficacy effect duration. Needs predefined choices. noeffect Pattern defines mosquitoes unaffected intervention. Can \"outdoor\", \"indoor\" NULL. steplife Step function decay, number months effective.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_ITN_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the ITN intervention parameterisation xml chunk. Compatibility\nversion. — define_ITN_compat","title":"Writes the ITN intervention parameterisation xml chunk. Compatibility\nversion. — define_ITN_compat","text":"Writes ITN intervention parameterisation xml chunk. Compatibility version.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_ITN_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the ITN intervention parameterisation xml chunk. Compatibility\nversion. — define_ITN_compat","text":"","code":"define_ITN_compat(   baseList,   component = \"histITN\",   noeffect = \"outdoor\",   mosqs,   halflife = 2,   resist = TRUE,   hist = FALSE,   strong = FALSE,   versionnum = 38 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_ITN_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the ITN intervention parameterisation xml chunk. Compatibility\nversion. — define_ITN_compat","text":"baseList List experiment data. component Name intervention, can name needs defined deployment. noeffect mosquitoes unaffected intervention? mosqs Name mosquito species affected intervention halflife Attrition nets years resist TRUE, pyrethroid resistance assumed (default percentage..?) hist Used historical intervention coverage? strong !strong !resist, \"Pitoa\" parameter LLIN versionnum OpenMalaria version (e.g. 38, 43)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_changeHS_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to write the case management deployments — define_changeHS_compat","title":"Function to write the case management deployments — define_changeHS_compat","text":"Function write case management deployments","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_changeHS_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to write the case management deployments — define_changeHS_compat","text":"","code":"define_changeHS_compat(   baseList,   access = \"Access\",   coverage = NULL,   y1 = 2000,   y2 = 2015,   use_at_symbol = TRUE,   pSelfTreatUncomplicated = 0.01821375,   futSevere = NULL,   pSeekOfficialCareSevere = 0.48,   SIMSTART = \"1918-01-01\",   every = 1,   interval = \"year\",   m1 = 1,   m2 = 1,   init.act = 1,   init.qn = 1,   init.self = 1,   comp.act = 1,   comp.qn = 1,   comp.self = 1 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_changeHS_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to write the case management deployments — define_changeHS_compat","text":"baseList List experiment data. access Name coverage value (.e. \"Access\") coverage Name future intervention change HS (.e. \"@futCM@\") y1 Year first date (surveys starting year y1) y2 Year end date (surveys continuing year y2) use_at_symbol TRUE, variable replaced setting specific values pSelfTreatUncomplicated Proportion uncomplicated episodes treated home futSevere Variable different values 'pseekOfficialCareSevere' pSeekOfficialCareSevere Proportion severe episodes seek care formal sector SIMSTART Start simulations (equal ORIGIN!) every Interval size interval Interval size (days, weeks, ) m1 Month first date m2 Month end date init.act Initial ACT init.qn Initial Quinine init.self Initial self treatment comp.act See OpenMalaria comp.qn See OpenMalaria comp.self See OpenMalaria","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_importedInfections_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes importation intervention — define_importedInfections_compat","title":"Writes importation intervention — define_importedInfections_compat","text":"Writes importation intervention","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_importedInfections_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes importation intervention — define_importedInfections_compat","text":"","code":"define_importedInfections_compat(baseList, val = 10, time = 0)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_importedInfections_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes importation intervention — define_importedInfections_compat","text":"baseList List experiment data. val Number imported infections per 1000. time Rate importation, 0, constant importation rate since beginning.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_larv_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes the larviciding component xml chunk — define_larv_compat","title":"Function that writes the larviciding component xml chunk — define_larv_compat","text":"Function writes larviciding component xml chunk","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_larv_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes the larviciding component xml chunk — define_larv_compat","text":"","code":"define_larv_compat(   baseList,   mosqs,   component = \"LSM\",   coverage = \"@futLSMcov@\",   decayVals = list(L = 0.25, k = NULL, funct = \"step\"),   y1 = 2018,   y2 = 2030,   m1 = 4,   m2 = 6,   every = 2,   interval = \"week\",   SIMSTART = \"1918-01-01\" )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_larv_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes the larviciding component xml chunk — define_larv_compat","text":"baseList List experiment data. mosqs Names mosquito species simulate component Name vector population intervention (.e. LSM) coverage variable numeric value decayVals Decay (specified, constant effectiveness, step function default) y1 Year first date (surveys starting year y1) y2 Year end date (surveys continuing year y2) m1 Month first date m2 Month end date every Integer value interval Month, year, week, quarter SIMSTART Starting date simulations format \"yyyy-mm-dd\", default e.g. \"1918-01-01\"","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_nothing_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes an intervention parameterisation xml chunk that does nothing.\nCompatibility version. — define_nothing_compat","title":"Writes an intervention parameterisation xml chunk that does nothing.\nCompatibility version. — define_nothing_compat","text":"useful something needs deployed, placeholder.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_nothing_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes an intervention parameterisation xml chunk that does nothing.\nCompatibility version. — define_nothing_compat","text":"","code":"define_nothing_compat(baseList, mosqs, component = \"nothing\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/define_nothing_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes an intervention parameterisation xml chunk that does nothing.\nCompatibility version. — define_nothing_compat","text":"baseList List experiment data. mosqs Name mosquito species affected intervention. component Name intervention, can name needs defined deployment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deleteLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all files from the log directory — deleteLogs","title":"Remove all files from the log directory — deleteLogs","text":"Remove files log directory","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deleteLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all files from the log directory — deleteLogs","text":"","code":"deleteLogs()  delete_logs()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deployIT.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the deployment of an intervention. — deployIT","title":"Writes the deployment of an intervention. — deployIT","text":"Writes deployment intervention.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deployIT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the deployment of an intervention. — deployIT","text":"","code":"deployIT(   baseList,   component = \"ITN\",   cumulative = FALSE,   effects = NULL,   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL,   minAge = NULL,   maxAge = NULL,   coverage = NULL,   subpop = NULL )  deploy_IT(   baseList,   component = \"ITN\",   cumulative = FALSE,   effects = NULL,   startDate = NULL,   endDate = NULL,   interval = NULL,   dates = NULL,   minAge = NULL,   maxAge = NULL,   coverage = NULL,   subpop = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deployIT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the deployment of an intervention. — deployIT","text":"baseList List experiment data. component Name intervention. cumulative Default FALSE. set TRUE. effects Either NULL vector strings, e.g. c(\"det\",\"pre\",\"post\") startDate Date YYYY-MM-DD format. endDate Date YYYY-MM-DD format. interval string like '1 weeks'. seq.Date(). list composed entries 'days' (optional), 'months' (optional) 'years'. list used, startDate endDate used can NULL. dates NULL, startDate, endDate interval used, else vector dates YYYY-MM-DD format. Can placeholder. minAge Minimum age deployment (used SMC). Can placeholder. maxAge Maximum age deployment (used SMC). Can placeholder. coverage Value variable coverage. Can placeholder. subpop Either NULL string. Concatenation component+\"-\"+subpop id subpopulation intervention restricted (see restrictToSubPop OpenMalaria)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_cont_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Deployment of an continuous intervention — deploy_cont_compat","title":"Deployment of an continuous intervention — deploy_cont_compat","text":"Deployment continuous intervention","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_cont_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deployment of an continuous intervention — deploy_cont_compat","text":"","code":"deploy_cont_compat(   baseList,   component = \"IPTi\",   begin = \"2019-01-01\",   end = \"2030-01-01\",   targetAgeYrs = NULL,   vaccMinPrevDoses = NULL,   vaccMaxCumDoses = NULL,   coverage = NULL,   varyCov = FALSE,   restrictToSubPop = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_cont_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deployment of an continuous intervention — deploy_cont_compat","text":"baseList List experiment data. component Name intervention begin Start date intervention (yyyy-mm-dd) end End date intervention (yyyy-mm-dd) targetAgeYrs Age intervention received (1=1 year) e,g. c(0.25,0.33 ,0.75) vaccMinPrevDoses Applies vaccines : vaccine doses deployed deployment previous number doses (component deployed) least number. Needs length targetAgeYrs. vaccMaxCumDoses Applies vaccines : vaccine doses deployed deployment previous number doses (component deployed) less number. Needs length targetAgeYrs. coverage Coverage, either fixed (integer) variable (\"@IPTcov@\"), order target age years varyCov Default FALSE , varying coverage restrictToSubPop f element specified, deployment restricted sub-population","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_it_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the deployment of an intervention. Compatibility version. — deploy_it_compat","title":"Writes the deployment of an intervention. Compatibility version. — deploy_it_compat","text":"Writes deployment intervention. Compatibility version.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_it_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the deployment of an intervention. Compatibility version. — deploy_it_compat","text":"","code":"deploy_it_compat(   baseList,   component = \"ITN\",   cumulative = FALSE,   effects = NULL,   y1 = 2000,   y2 = NULL,   m1 = 1,   m2 = NULL,   d1 = 1,   d2 = NULL,   every = 1,   interval = \"month\",   SIMSTART = \"1918-01-01\",   minAge = NULL,   maxAge = NULL,   coverage = NULL,   byyear = FALSE,   deployvar = NULL,   subpop = FALSE )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/deploy_it_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the deployment of an intervention. Compatibility version. — deploy_it_compat","text":"baseList List experiment data. component Name intervention. cumulative default FALSE. set TRUE. effects Either NULL c(\"det\",\"pre\",\"post\") y1 Year first date (surveys starting year y1) y2 Year end date (surveys continuing year y2) m1 Month first date m2 Month end date d1 Day first date d2 Day end date every Interval size interval Interval size (days, weeks, ) SIMSTART Starting date simulations format \"yyyy-mm-dd\" minAge Minimum age deployment (used SMC) maxAge Maximum age deployment (used SMC) coverage Value variable coverage byyear TRUE, allows coverage vary year ('histITNcov2000',...) deployvar Allows deployment dates vary (across years y1, ..., y2) subpop TRUE, restricts subpopulation (see restrictToSubPop OpenMalaria)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addExpToDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to experiments table in DB — .addExpToDB","title":"Add data to experiments table in DB — .addExpToDB","text":"Add data experiments table DB","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addExpToDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to experiments table in DB — .addExpToDB","text":"","code":".addExpToDB(connection, x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addExpToDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to experiments table in DB — .addExpToDB","text":"connection Database connection. x Data add.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addPlaceholdersToDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to placeholders table in DB — .addPlaceholdersToDB","title":"Add data to placeholders table in DB — .addPlaceholdersToDB","text":"Add data placeholders table DB","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addPlaceholdersToDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to placeholders table in DB — .addPlaceholdersToDB","text":"","code":".addPlaceholdersToDB(connection, x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addPlaceholdersToDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to placeholders table in DB — .addPlaceholdersToDB","text":"connection Database connection. x Data add.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addResultsToDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to results table in DB — .addResultsToDB","title":"Add data to results table in DB — .addResultsToDB","text":"Add data results table DB","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addResultsToDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to results table in DB — .addResultsToDB","text":"","code":".addResultsToDB(connection, x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addResultsToDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to results table in DB — .addResultsToDB","text":"connection Database connection. x Data add.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addScenToDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to scenarios and scenarios_metadata table in DB — .addScenToDB","title":"Add data to scenarios and scenarios_metadata table in DB — .addScenToDB","text":"Add data scenarios scenarios_metadata table DB","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addScenToDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to scenarios and scenarios_metadata table in DB — .addScenToDB","text":"","code":".addScenToDB(connection, x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-addScenToDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to scenarios and scenarios_metadata table in DB — .addScenToDB","text":"connection Database connection. x Data add.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompact.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate smooth compact decay parameters — .calculateSmoothCompact","title":"Calculate smooth compact decay parameters — .calculateSmoothCompact","text":"Calculate smooth compact decay parameters","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate smooth compact decay parameters — .calculateSmoothCompact","text":"","code":".calculateSmoothCompact(k, L, t = seq(0, 10, length.out = 100))"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate smooth compact decay parameters — .calculateSmoothCompact","text":"k Shape parameter L Decay parameter (number years) t Vector time (years)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompactHalflife.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate smooth compact halflife — .calculateSmoothCompactHalflife","title":"Calculate smooth compact halflife — .calculateSmoothCompactHalflife","text":"Explores space k x L find smooth-compact closest given smooth-compact, halflife 'halflife' (say 2 instead 3)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompactHalflife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate smooth compact halflife — .calculateSmoothCompactHalflife","text":"","code":".calculateSmoothCompactHalflife(   k = 2.14,   L = 6.08,   halflife = 2,   threshold = 0.5,   grid_n = 50 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-calculateSmoothCompactHalflife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate smooth compact halflife — .calculateSmoothCompactHalflife","text":"k Scaling factor smooth compact L factor smooth compact halflife Desired halflife (positive number) threshold Set 0.50 'halflife' grid_n fine grid explore (50 x 50)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-compressFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress files into zip archive — .compressFiles","title":"Compress files into zip archive — .compressFiles","text":"Compress files zip archive","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-compressFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress files into zip archive — .compressFiles","text":"","code":".compressFiles(dir, pattern = NULL, remove = FALSE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-compressFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress files into zip archive — .compressFiles","text":"dir Path directory. pattern optional regular expression. See list.files value TRUE, files removed adding archive.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database connection — .createDB","title":"Create a database connection — .createDB","text":"Create SQLite database root directory exist return connection.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database connection — .createDB","text":"","code":".createDB(dbName, path = getCache(\"rootDir\"))"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database connection — .createDB","text":"dbName Name database file without extension. path Directory database file. Defaults root directory.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createFolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder structure — .createFolders","title":"Create folder structure — .createFolders","text":"Generate folder structure experiment. Caches paths .pkgcache environment.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createFolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder structure — .createFolders","text":"","code":".createFolders(   experimentName,   rootDir = NULL,   scenariosDir = NULL,   logsDir = NULL,   replace = \"ask\" )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createFolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder structure — .createFolders","text":"experimentName Name experiment. Spaces replaced underscores. rootDir Root directory string. Defaults current working directory. scenariosDir Scenarios directory name string. subfolder rootDir. Defaults 'scenarios'. logsDir Logs directory name string. subfolder rootDir. Defaults 'logs'. replace present directory structure replaced. Can TRUE, FALSE \"ask\".","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createResultsTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the DB result table — .createResultsTable","title":"Create the DB result table — .createResultsTable","text":"Creates database schema results.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createResultsTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the DB result table — .createResultsTable","text":"","code":".createResultsTable(connection, tName, columns)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createResultsTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the DB result table — .createResultsTable","text":"connection Database connection. tName Name results table. columns list containing column names types, e.g. list(names = c(scenario_id, value), types = c(\"INTEGER\", \"NUMERIC\")). column \"experiment_id\" always automatically added.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the DB table layout, except the results table — .createTables","title":"Create the DB table layout, except the results table — .createTables","text":"Creates database schema: experiments, scenarios, scenarios_metadata, placeholders. Changes cascaded experiments table.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the DB table layout, except the results table — .createTables","text":"","code":".createTables(connection)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-createTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the DB table layout, except the results table — .createTables","text":"connection Database connection.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-defineInterventionsHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sure required elements are declared — .defineInterventionsHeader","title":"Make sure required elements are declared — .defineInterventionsHeader","text":"Make sure required elements declared","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-defineInterventionsHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure required elements are declared — .defineInterventionsHeader","text":"","code":".defineInterventionsHeader(baseList, name = \"All interventions\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-defineInterventionsHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure required elements are declared — .defineInterventionsHeader","text":"baseList List experiment data. name Name interventions.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-deployTime_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic function used for deploying interventions — .deployTime_compat","title":"Basic function used for deploying interventions — .deployTime_compat","text":"Compatibility Munirflow deploy time format. Returns list startDate, endDate interval new format.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-deployTime_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic function used for deploying interventions — .deployTime_compat","text":"","code":".deployTime_compat(   y1 = 2000,   y2 = NULL,   m1 = 5,   m2 = NULL,   d1 = 5,   d2 = NULL,   every = 1,   interval = \"year\",   ... )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-deployTime_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic function used for deploying interventions — .deployTime_compat","text":"y1 Year first date (surveys starting year y1) y2 Year end date (surveys continuing year y2) m1 Month first date m2 Month end date d1 Day first date d2 Day end date every Interval size interval Interval size (days, weeks, ) ... Deprecated arguments","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-equalizePlaceholders.html","id":null,"dir":"Reference","previous_headings":"","what":"Equalize length of placeholder sequences — .equalizePlaceholders","title":"Equalize length of placeholder sequences — .equalizePlaceholders","text":"Equalize length placeholder sequences","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-equalizePlaceholders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equalize length of placeholder sequences — .equalizePlaceholders","text":"","code":".equalizePlaceholders(x, placeholderseq)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-equalizePlaceholders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equalize length of placeholder sequences — .equalizePlaceholders","text":"x Sequence maximum length. placeholderseq List placeholder sequences.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-getIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for name and/or value — .getIndex","title":"Search for name and/or value — .getIndex","text":"Search name /value","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-getIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for name and/or value — .getIndex","text":"","code":".getIndex(l, name = NULL, value = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-getIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for name and/or value — .getIndex","text":"l Input list. name Name look . value Value look .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-indexList.html","id":null,"dir":"Reference","previous_headings":"","what":"Build index of a list recursively — .indexList","title":"Build index of a list recursively — .indexList","text":"Build index list recursively","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-indexList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build index of a list recursively — .indexList","text":"","code":".indexList(l, col = list(), n = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-indexList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build index of a list recursively — .indexList","text":"l Input list. col Collection list. n Current index level.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-makeXmlRoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate XML root — .makeXmlRoot","title":"Generate XML root — .makeXmlRoot","text":"Generate XML root","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-makeXmlRoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate XML root — .makeXmlRoot","text":"","code":".makeXmlRoot(schemaVersion, name, analysisNo)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-makeXmlRoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate XML root — .makeXmlRoot","text":"schemaVersion OM schema version name Experiment name analysisNo Analysis number","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderCollect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect if current value is a placeholder — .placeholderCollect","title":"Collect if current value is a placeholder — .placeholderCollect","text":"Collect current value placeholder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderCollect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect if current value is a placeholder — .placeholderCollect","text":"","code":".placeholderCollect(x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderCollect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect if current value is a placeholder — .placeholderCollect","text":"x R object.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderseqGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate placeholder sequence — .placeholderseqGen","title":"Generate placeholder sequence — .placeholderseqGen","text":"Generate placeholder sequence","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderseqGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate placeholder sequence — .placeholderseqGen","text":"","code":".placeholderseqGen(x, placeholders)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-placeholderseqGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate placeholder sequence — .placeholderseqGen","text":"x Input data. assumed list form 'list(foo = list(\"bar\", c(1, 2, 3, ...)), ...)' 'list(foo = c(seq1, seq2, ...), ...)' placeholders Character vector names processed","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Print debug messages — .printDebug","title":"Print debug messages — .printDebug","text":"Like print, 'debugOutput' TRUE.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print debug messages — .printDebug","text":"","code":".printDebug(x, ...)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printDebug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print debug messages — .printDebug","text":"x Object print. ... arguments print().","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printVerbose.html","id":null,"dir":"Reference","previous_headings":"","what":"Print verbose messages — .printVerbose","title":"Print verbose messages — .printVerbose","text":"Like print, 'verboseOutput' TRUE.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printVerbose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print verbose messages — .printVerbose","text":"","code":".printVerbose(x, ...)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-printVerbose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print verbose messages — .printVerbose","text":"x Object print. ... arguments print().","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-recXML.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively create XML — .recXML","title":"Recursively create XML — .recXML","text":"Recursively create XML","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-recXML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively create XML — .recXML","text":"","code":".recXML(x, data, errCol, recLevel = list())"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-recXML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively create XML — .recXML","text":"x XML node data List experiment information errCol Checkmate error collection recLevel List containing current recursion level","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosFilenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a filename column to scenarios — .scenariosFilenames","title":"Add a filename column to scenarios — .scenariosFilenames","text":"Add filename column scenarios","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosFilenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a filename column to scenarios — .scenariosFilenames","text":"","code":".scenariosFilenames(scenarios, prefix)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosFilenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a filename column to scenarios — .scenariosFilenames","text":"scenarios Data frame containing values placeholders. One row per scenario, placeholders columns. Column names correspond placeholder names. prefix Filename prefix","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosGenFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate scenario xml files — .scenariosGenFiles","title":"Generate scenario xml files — .scenariosGenFiles","text":"Generate scenario xml files","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosGenFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate scenario xml files — .scenariosGenFiles","text":"","code":".scenariosGenFiles(   scenarios,   baseFile,   range,   placeholders,   prefix,   ncores = 1 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosGenFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate scenario xml files — .scenariosGenFiles","text":"scenarios Data frame containing values placeholders. One row per scenario, placeholders columns. Column names correspond placeholder names. baseFile Compatible base xml file. range Row range scenarios placeholders Vector containing placeholders prefix Filename prefix ncores Number parallel processes use.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosRowSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Select rows for scenario creation — .scenariosRowSelect","title":"Select rows for scenario creation — .scenariosRowSelect","text":"Select rows scenario creation","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosRowSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select rows for scenario creation — .scenariosRowSelect","text":"","code":".scenariosRowSelect(scenarios, rowStart = NULL, rowEnd = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-scenariosRowSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select rows for scenario creation — .scenariosRowSelect","text":"scenarios Data frame containing values placeholders. One row per scenario, placeholders columns. Column names correspond placeholder names. rowStart Starting row. Optional. rowEnd End row. Optional.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-setFunArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Override default function arguments — .setFunArgs","title":"Override default function arguments — .setFunArgs","text":"Override default function arguments","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-setFunArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Override default function arguments — .setFunArgs","text":"","code":".setFunArgs(f, args)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-setFunArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Override default function arguments — .setFunArgs","text":"f Function args List function arguments","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncBoth.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchronize diskCache and memCache — .syncBoth","title":"Synchronize diskCache and memCache — .syncBoth","text":"Synchronize diskCache memCache","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncBoth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchronize diskCache and memCache — .syncBoth","text":"","code":".syncBoth(diskCache, memCache)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncBoth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchronize diskCache and memCache — .syncBoth","text":"diskCache Cache environment memCache Cache environment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncDisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes .pkgcache to disk — .syncDisk","title":"Writes .pkgcache to disk — .syncDisk","text":"Writes .pkgcache disk","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncDisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes .pkgcache to disk — .syncDisk","text":"","code":".syncDisk(path)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncDisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes .pkgcache to disk — .syncDisk","text":"path Path 'cache.rds' file.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncMem.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign values from diskCache to .pkgcache — .syncMem","title":"Assign values from diskCache to .pkgcache — .syncMem","text":"Assign values diskCache .pkgcache","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncMem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign values from diskCache to .pkgcache — .syncMem","text":"","code":".syncMem(diskCache)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-syncMem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign values from diskCache to .pkgcache — .syncMem","text":"diskCache Cache environment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-synchronizeCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchronize the Cache — .synchronizeCache","title":"Synchronize the Cache — .synchronizeCache","text":"Synchronize Cache","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-synchronizeCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchronize the Cache — .synchronizeCache","text":"","code":".synchronizeCache(path = NULL, direction = c(\"disk\", \"memory\", \"none\"))"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-synchronizeCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchronize the Cache — .synchronizeCache","text":"path Path cache directory. direction Directions sync. Can one \"disk\" = memory cache overrides disk cache, \"memory\" = disk cache overrides memory cache \"none\" = caches get synchronized via timestamps.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-unqouteExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Unqoute expression — .unqouteExpr","title":"Unqoute expression — .unqouteExpr","text":"Unqoute expression","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-unqouteExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unqoute expression — .unqouteExpr","text":"","code":".unqouteExpr(expr)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-unqouteExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unqoute expression — .unqouteExpr","text":"expr Expression","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-useDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a folder and return the path — .useDir","title":"Create a folder and return the path — .useDir","text":"folder exist, create return path. Otherwise, just return path.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-useDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a folder and return the path — .useDir","text":"","code":".useDir(path)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-useDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a folder and return the path — .useDir","text":"path Path directory.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddChunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate XML chunks — .xmlAddChunks","title":"Generate XML chunks — .xmlAddChunks","text":"Generate XML chunks","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddChunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate XML chunks — .xmlAddChunks","text":"","code":".xmlAddChunks(outlist, element, attributeList)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddChunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate XML chunks — .xmlAddChunks","text":"outlist List get modified returned. element Element add attributeList Attributes add","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddChunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate XML chunks — .xmlAddChunks","text":"XML entries","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddList.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sublist to list — .xmlAddList","title":"Add sublist to list — .xmlAddList","text":"Add sublist list","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sublist to list — .xmlAddList","text":"","code":".xmlAddList(data, sublist, entry, input, append = TRUE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlAddList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sublist to list — .xmlAddList","text":"data List add . sublist Sublist, entry get added. Must given vector, e.g. c(\"level1\", \"level2\", ...). Can NULL. entry Name entry add, string. Can NULL. input List add. append Boolean. Determines list appended existing entries overwrite .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMakeDocRec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xml entries recursively — .xmlMakeDocRec","title":"Create xml entries recursively — .xmlMakeDocRec","text":"Create xml entries recursively","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMakeDocRec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xml entries recursively — .xmlMakeDocRec","text":"","code":".xmlMakeDocRec(baseXML, data)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMakeDocRec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xml entries recursively — .xmlMakeDocRec","text":"baseXML root xml object data List experiment information","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMonitoringTimeRegularSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a date sequence — .xmlMonitoringTimeRegularSeq","title":"Generate a date sequence — .xmlMonitoringTimeRegularSeq","text":"Generate date sequence","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMonitoringTimeRegularSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a date sequence — .xmlMonitoringTimeRegularSeq","text":"","code":".xmlMonitoringTimeRegularSeq(   startDate,   endDate,   daysFilter,   dateFilter = \"none\" )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlMonitoringTimeRegularSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a date sequence — .xmlMonitoringTimeRegularSeq","text":"startDate Start date 'YYYY-MM-DD' endDate End date 'YYYY-MM-DD' daysFilter Day differences keep dateFilter c(\"none\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\")","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeBlockSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate date sequence based on specified days, months and years — .xmlTimeBlockSeq","title":"Generate date sequence based on specified days, months and years — .xmlTimeBlockSeq","text":"Generate date sequence based specified days, months years","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeBlockSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate date sequence based on specified days, months and years — .xmlTimeBlockSeq","text":"","code":".xmlTimeBlockSeq(interval)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeBlockSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate date sequence based on specified days, months and years — .xmlTimeBlockSeq","text":"interval list composed entries 'days' (optional), 'months' (optional) 'years'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeBlockSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate date sequence based on specified days, months and years — .xmlTimeBlockSeq","text":"sequence dates YYYY-MM-DD format","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeRegularSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate date sequence based on start and end date — .xmlTimeRegularSeq","title":"Generate date sequence based on start and end date — .xmlTimeRegularSeq","text":"Generate date sequence based start end date","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeRegularSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate date sequence based on start and end date — .xmlTimeRegularSeq","text":"","code":".xmlTimeRegularSeq(startDate, endDate, interval)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeRegularSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate date sequence based on start and end date — .xmlTimeRegularSeq","text":"startDate Date YYYY-MM-DD format endDate Date YYYY-MM-DD format interval string like '1 weeks'. seq.Date()","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/dot-xmlTimeRegularSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate date sequence based on start and end date — .xmlTimeRegularSeq","text":"sequence dates YYYY-MM-DD format","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/expInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect information about current experiment — expInfo","title":"Collect information about current experiment — expInfo","text":"Collect information current experiment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/expInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect information about current experiment — expInfo","text":"","code":"expInfo(what = NULL, print = TRUE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/expInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect information about current experiment — expInfo","text":"information collect. Can c(\"name\", \"path\", \"om_version\", \"placeholders\", \"simStart\", \"surveyTimes\") print TRUE, pretty print information. Otherwise return list.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/extractList.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract sublist which matches input — extractList","title":"Extract sublist which matches input — extractList","text":"Extract sublist matches input","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/extractList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract sublist which matches input — extractList","text":"","code":"extractList(l, name = NULL, value = NULL, onlyIndex = FALSE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/extractList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract sublist which matches input — extractList","text":"l Input list. name Name look . value Value look . onlyIndex TRUE, return numeric index matches.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/finalizeScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate scenarios from a base xml file — finalizeScenarios","title":"Generate scenarios from a base xml file — finalizeScenarios","text":"Function makes sure scenario data frame set correctly. adds required 'ID' 'file' columns.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/finalizeScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate scenarios from a base xml file — finalizeScenarios","text":"","code":"finalizeScenarios(x)  finalize_scenarios(x)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/finalizeScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate scenarios from a base xml file — finalizeScenarios","text":"x Data frame containing values placeholders scenarios.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/getCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cached object from cache. — getCache","title":"Get cached object from cache. — getCache","text":"Get cached object cache.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/getCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cached object from cache. — getCache","text":"","code":"getCache(x, ret = \"value\")  get_cache(x, ret = \"value\")"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/getCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cached object from cache. — getCache","text":"x Object name retrieve cache. ret values return. Can one \"value\", \"timestamp\" \"\".","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/listCache.html","id":null,"dir":"Reference","previous_headings":"","what":"List objects and values in cache. — listCache","title":"List objects and values in cache. — listCache","text":"List objects values cache.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/listCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List objects and values in cache. — listCache","text":"","code":"listCache(simple = FALSE)  list_cache(simple = FALSE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/listCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List objects and values in cache. — listCache","text":"simple TRUE simply list names objects cache, else (FALSE) also show values.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/loadExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cached data from experiment — loadExperiment","title":"Load cached data from experiment — loadExperiment","text":"Load cached data experiment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/loadExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cached data from experiment — loadExperiment","text":"","code":"loadExperiment(path)  load_experiment(path)  loadCache(path)  load_cache(path)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/loadExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cached data from experiment — loadExperiment","text":"path Path experiment's folder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/make_ento_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write entomology — make_ento_compat","title":"Write entomology — make_ento_compat","text":"Write entomology","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/make_ento_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write entomology — make_ento_compat","text":"","code":"make_ento_compat(   baseList,   mosqs,   contrib = c(0.81, 0.08, 0.09, 0.02),   propInfected = 0.078,   propInfectious = 0.021,   EIR = \"@EIR@\",   seasonality = paste0(\"@m\", 1:12, \"@\") )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/make_ento_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write entomology — make_ento_compat","text":"baseList List experiment data. mosqs Mosquito vectors contrib Proportion contribution propInfected Proportion infected propInfectious Proportion infectious EIR EIR value seasonality Vector length 12","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringCohortsGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'monitoring/Cohorts' — monitoringCohortsGen","title":"Generate list for 'monitoring/Cohorts' — monitoringCohortsGen","text":"Generate list 'monitoring/Cohorts'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringCohortsGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'monitoring/Cohorts' — monitoringCohortsGen","text":"","code":"monitoringCohortsGen(ids)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringCohortsGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'monitoring/Cohorts' — monitoringCohortsGen","text":"ids Vector containg cohort names","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringContinuousGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'monitoring/continuous/options' — monitoringContinuousGen","title":"Generate list for 'monitoring/continuous/options' — monitoringContinuousGen","text":"Generate list 'monitoring/continuous/options'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringContinuousGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'monitoring/continuous/options' — monitoringContinuousGen","text":"","code":"monitoringContinuousGen(period, options)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringContinuousGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'monitoring/continuous/options' — monitoringContinuousGen","text":"period Value period options List options","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyOptionsGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'monitoring/continuous/options' — monitoringSurveyOptionsGen","title":"Generate list for 'monitoring/continuous/options' — monitoringSurveyOptionsGen","text":"Generate list 'monitoring/continuous/options'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyOptionsGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'monitoring/continuous/options' — monitoringSurveyOptionsGen","text":"","code":"monitoringSurveyOptionsGen(onlyNewEpisodes = NULL, options)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyOptionsGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'monitoring/continuous/options' — monitoringSurveyOptionsGen","text":"onlyNewEpisodes Value onlyNewEpisodes options List options","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyTimesGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'monitoring/surveys/surveyTime' — monitoringSurveyTimesGen","title":"Generate list for 'monitoring/surveys/surveyTime' — monitoringSurveyTimesGen","text":"Generate list 'monitoring/surveys/surveyTime'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyTimesGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'monitoring/surveys/surveyTime' — monitoringSurveyTimesGen","text":"","code":"monitoringSurveyTimesGen(   startDate = NULL,   endDate = NULL,   interval,   simStart = NULL,   detectionLimit = NULL,   diagnostic = NULL,   compatSurveys = FALSE )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/monitoringSurveyTimesGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'monitoring/surveys/surveyTime' — monitoringSurveyTimesGen","text":"startDate Start date character \"YYYY-MM-DD\". endDate End date character \"YYYY-MM-DD\". interval Time interval. Either string (\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"), \"X days\" (e.g. \"15 days\"), list, e.g. (days = c(2, 5), months = c(3:7), years = c(2005:2030)). Setting days list 31 always use last day corresponding month (e.g. 28 February, 31 July). simStart Start date simulation. good idea put 100 years first survey date. detectionLimit Deprecated openMalaria. Double, limit human's infection reported patent. diagnostic Name parameterised diagnostic use surveys. See openMalaria documentation. compatSurveys survey times compatible legacy versions. default, surveys exclude timestep survey date. Setting TRUE, one timestep added survey date include dates survey .","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/omOutputDict.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Malaria output dictionary — omOutputDict","title":"Open Malaria output dictionary — omOutputDict","text":"dictionary provides translations following outputs Open Malaria: Survey measure numbers names Whether measures summed survey dates (incident = TRUE) represent prevalent characteristics (incident = FALSE) identifier 'third dimension' column. can 'age_group', 'vector_species', 'drug_id' NA See: https://github.com/SwissTPH/openmalaria/wiki/MonitoringOptions","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/omOutputDict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Malaria output dictionary — omOutputDict","text":"","code":"omOutputDict()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/processFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read file line by line — processFile","title":"Read file line by line — processFile","text":"Read file line line optionally remove whitespace duplicate lines. WARNING: careful large files!","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/processFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read file line by line — processFile","text":"","code":"processFile(f, trim = TRUE, rmdups = TRUE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/processFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read file line by line — processFile","text":"f Path file. trim TRUE, trim whitespace. rmdups TRUE, keep lines identical previous line whitespace.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/processFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read file line by line — processFile","text":"Character vector element corresponding line.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/putCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Store object in cache. — putCache","title":"Store object in cache. — putCache","text":"Store object cache.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/putCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store object in cache. — putCache","text":"","code":"putCache(x, value)  put_cache(x, value)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/putCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store object in cache. — putCache","text":"x Object name store cache. value Object value store cache.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readOutputFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Open Malaria output file — readOutputFile","title":"Read Open Malaria output file — readOutputFile","text":"Read '*_out.txt' file, apply modifications return data frame added DB.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readOutputFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Open Malaria output file — readOutputFile","text":"","code":"readOutputFile(f, filter = NULL, translate = TRUE, scenID = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readOutputFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Open Malaria output file — readOutputFile","text":"f File name read . filter data.table expression filter rows. translate Can c(\"dates\", \"measures\") simply TRUE (implies ) FALSE (implies none). scenID Scenario ID added.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Open Malaria results into a database — readResults","title":"Collect Open Malaria results into a database — readResults","text":"Collect Open Malaria results database","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Open Malaria results into a database — readResults","text":"","code":"readResults(expDir, dbName, dbDir = NULL, replace = FALSE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Open Malaria results into a database — readResults","text":"expDir Database connection. dbName Name database file without extension. dbDir Directory database file. Defaults root directory. replace handle duplicate experiments database. TRUE, experiment name replaced. FALSE, new entry name ignored. DEPRECATED Database always replaced.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Return cached scenarios — readScenarios","title":"Return cached scenarios — readScenarios","text":"Return cached scenarios","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return cached scenarios — readScenarios","text":"","code":"readScenarios(experimentDir = NULL)  read_scenarios(experimentDir = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/readScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return cached scenarios — readScenarios","text":"experimentDir Directory experiment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/runSimulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Run openMalaria scenarios — runSimulations","title":"Run openMalaria scenarios — runSimulations","text":"Generates system call launch OpenMalaria correct parameters scenario found directory. assumed OpenMalaria available PATH.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/runSimulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run openMalaria scenarios — runSimulations","text":"","code":"runSimulations(   scenarios = NULL,   cmd = \"openMalaria\",   dryRun = FALSE,   verbose = FALSE,   ncores = 1,   rowStart = NULL,   rowEnd = NULL )  run_simulations(   scenarios = NULL,   cmd = \"openMalaria\",   dryRun = FALSE,   verbose = FALSE,   ncores = 1,   rowStart = NULL,   rowEnd = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/runSimulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run openMalaria scenarios — runSimulations","text":"scenarios Scenario data frame cmd Command run openMalaria. dryRun TRUE, final command printed executed. verbose TRUE, use OpenMalaria's verbose output. ncores Number parallel processes use. rowStart Starting row. Optional. rowEnd End row. Optional.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupDirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder structure — setupDirs","title":"Create folder structure — setupDirs","text":"Generate folder structure experiment.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupDirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder structure — setupDirs","text":"","code":"setupDirs(   experimentName,   rootDir = NULL,   scenariosDir = NULL,   logsDir = NULL,   replace = \"ask\" )  setup_dirs(   experimentName,   rootDir = NULL,   scenariosDir = NULL,   logsDir = NULL,   replace = \"ask\" )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupDirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder structure — setupDirs","text":"experimentName Name experiment. Spaces replaced underscores. rootDir Root directory string. Defaults current working directory. scenariosDir Scenarios directory name string. subfolder rootDir. Defaults 'scenarios'. logsDir Logs directory name string. subfolder rootDir. Defaults 'logs'. replace present directory structure replaced. Can TRUE, FALSE \"ask\". remove existing content!","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupOM.html","id":null,"dir":"Reference","previous_headings":"","what":"Download required Open Malaria files — setupOM","title":"Download required Open Malaria files — setupOM","text":"Download required Open Malaria files","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupOM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download required Open Malaria files — setupOM","text":"","code":"setupOM(version = 44, dir = NULL)  setup_om(version = 44, dir = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupOM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download required Open Malaria files — setupOM","text":"version Major schema version. Supported: 44. dir Target directory. Defaults experiment directory.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate scenarios from a base xml file — setupScenarios","title":"Generate scenarios from a base xml file — setupScenarios","text":"Function generates scenarios defined data frame. data frame row scenario, placeholder values columns. Column names correspond placeholder names.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate scenarios from a base xml file — setupScenarios","text":"","code":"setupScenarios(   baseFile = NULL,   prefix = NULL,   scenarios,   ncores = 1,   rowStart = NULL,   rowEnd = NULL )  setup_scenarios(   baseFile = NULL,   prefix = NULL,   scenarios,   ncores = 1,   rowStart = NULL,   rowEnd = NULL )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/setupScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate scenarios from a base xml file — setupScenarios","text":"baseFile Compatible base xml file. prefix Prefix scenario files. scenarios Data frame containing values placeholders. One row per scenario, placeholders columns. Column names correspond placeholder names. ncores Number parallel processes use. rowStart Starting row. Optional. rowEnd End row. Optional.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/splitSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide a sequence x into chunks of size n. Any rest is appended. — splitSeq","title":"Divide a sequence x into chunks of size n. Any rest is appended. — splitSeq","text":"Divide sequence x chunks size n. rest appended.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/splitSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide a sequence x into chunks of size n. Any rest is appended. — splitSeq","text":"","code":"splitSeq(x, n)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/splitSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide a sequence x into chunks of size n. Any rest is appended. — splitSeq","text":"x Sequence like 1:10 n Chunk size","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/storeScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Store scenarios in cache folder — storeScenarios","title":"Store scenarios in cache folder — storeScenarios","text":"Store scenarios cache folder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/storeScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store scenarios in cache folder — storeScenarios","text":"","code":"storeScenarios(scenarios, csv = TRUE)  store_scenarios(scenarios, csv = TRUE)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/storeScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store scenarios in cache folder — storeScenarios","text":"scenarios Data frame containing values placeholders. One row per scenario, placeholders columns. Column names correspond placeholder names. csv Additionally save scenarios .csv file.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/surveyAgeGroupsGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list for 'monitoring/ageGroup' — surveyAgeGroupsGen","title":"Generate list for 'monitoring/ageGroup' — surveyAgeGroupsGen","text":"Generate list 'monitoring/ageGroup'","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/surveyAgeGroupsGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list for 'monitoring/ageGroup' — surveyAgeGroupsGen","text":"","code":"surveyAgeGroupsGen(lowerbound, upperbounds)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/surveyAgeGroupsGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list for 'monitoring/ageGroup' — surveyAgeGroupsGen","text":"lowerbound Double, lower bound age group upperbounds Vector upperbounds","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/surveyAgeGroupsGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate list for 'monitoring/ageGroup' — surveyAgeGroupsGen","text":"List xml contruction","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/syncCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchronized cached data from experiment — syncCache","title":"Synchronized cached data from experiment — syncCache","text":"Synchronized cached data experiment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/syncCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchronized cached data from experiment — syncCache","text":"","code":"syncCache(path)  sync_cache(path)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/syncCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchronized cached data from experiment — syncCache","text":"path Path experiment's folder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/toggleDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle debug messages — toggleDebug","title":"Toggle debug messages — toggleDebug","text":"Enables output debug messages functions implemented. Debug output default.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/toggleDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle debug messages — toggleDebug","text":"","code":"toggleDebug()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/toggleVerbose.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle verbose messages — toggleVerbose","title":"Toggle verbose messages — toggleVerbose","text":"Enables output verbose messages functions implemented. Verbose output default.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/toggleVerbose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle verbose messages — toggleVerbose","text":"","code":"toggleVerbose()"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/validateXML.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the XML file — validateXML","title":"Validate the XML file — validateXML","text":"Validate XML file","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/validateXML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the XML file — validateXML","text":"","code":"validateXML(xmlfile = NULL, schema = NULL, scenarios = NULL)  validate_xml(xmlfile = NULL, schema = NULL, scenarios = NULL)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/validateXML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the XML file — validateXML","text":"xmlfile Path XML file. schema Path XSD schema file. scenarios Scenario data frame.","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/writeCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Write cached data from experiment — writeCache","title":"Write cached data from experiment — writeCache","text":"Write cached data experiment","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/writeCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write cached data from experiment — writeCache","text":"","code":"writeCache(path)  write_cache(path)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/writeCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write cached data from experiment — writeCache","text":"path Path experiment's folder","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_demography_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write xml chunk for demography — write_demography_compat","title":"Write xml chunk for demography — write_demography_compat","text":"Write xml chunk demography","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_demography_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write xml chunk for demography — write_demography_compat","text":"","code":"write_demography_compat(   baseList,   maxage = 90,   country = \"BEN\",   percents = NULL,   uppers = NULL,   pop = \"@pop@\" )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_demography_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write xml chunk for demography — write_demography_compat","text":"baseList List experiment data. maxage Maximum age human population country Country (abbreviation, format \"BEN\") percents Percents uppers Upper age limit pop Population size simulations","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_end_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the underlying transmission dynamics — write_end_compat","title":"Write the underlying transmission dynamics — write_end_compat","text":"Write underlying transmission dynamics","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_end_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the underlying transmission dynamics — write_end_compat","text":"","code":"write_end_compat(   baseList,   seed = 4,   modelname = \"base\",   selectedOptions = NULL,   comorb = 0.0968,   critage = 0.117383,   logodds = 0.736202,   healthSystemMemory = \"6t\",   ... )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_end_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the underlying transmission dynamics — write_end_compat","text":"baseList List experiment data. seed Number replicates per scenario. modelname Select model (default= base 'R0000'). options currently available. selectedOptions Model options activate. Can combination c(\"COMORB_HET\", \"VECTOR_SIMPLE_MPD_MODEL\", \"LOGNORMAL_MASS_ACTION\", \"MAX_DENS_CORRECTION\", \"INNATE_MAX_DENS\", \"INDIRECT_MORTALITY_FIX\"). comorb Comorbidity. critage Critical age. logodds Log odds terms. healthSystemMemory healthSystemMemory (see OpenMalaria). ... deprecated","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_healthsys_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the health system part of the xml file — write_healthsys_compat","title":"Writes the health system part of the xml file — write_healthsys_compat","text":"Writes health system part xml file","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_healthsys_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the health system part of the xml file — write_healthsys_compat","text":"","code":"write_healthsys_compat(   baseList,   access = \"@Access2000@\",   init.a = 1,   init.q = 1,   init.s = 1,   comp.a = 1,   comp.q = 1,   comp.s = 1,   pSeekOfficialCareSevere = 0.48,   pSelfTreatUncomplicated = 0.01821375 )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_healthsys_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the health system part of the xml file — write_healthsys_compat","text":"baseList List experiment data. access Defines baseline effective treatment coverage init.ACT initial value init.q QN initial value init.s self-treat initial value comp.Compliance value ACT comp.q Compliance value QN comp.s Compliance value self-treat pSeekOfficialCareSevere Default value 0.48 pSelfTreatUncomplicated Default value 0.0182","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_monitoring_compat.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the monitoring measures xml chunk — write_monitoring_compat","title":"Writes the monitoring measures xml chunk — write_monitoring_compat","text":"Wrapper function write_continuous write_SurveyOptions","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_monitoring_compat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the monitoring measures xml chunk — write_monitoring_compat","text":"","code":"write_monitoring_compat(   baseList,   name = \"Annual Surveys\",   continuous = TRUE,   SurveyOptions = TRUE,   surveyMeasures = NULL,   continuousMeasures = NULL,   y1 = 2000,   y2 = 2036,   m1 = 1,   m2 = 1,   d1 = 1,   d2 = 1,   SIMSTART = \"1918-01-01\",   interval = \"month\",   detect = 200,   upperbounds = c(1, 2, 5, 6, 10, 11, 100) )"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/write_monitoring_compat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the monitoring measures xml chunk — write_monitoring_compat","text":"baseList List experiment data. name Name monitoring settings. continuous Write measures continuous surveys SurveyOptions Write measures SurveyOptions surveyMeasures NULL, default used continuousMeasures NULL, default used y1 Year first date (surveys starting year y1) y2 Year end date (surveys continuing year y2) m1 Month first date m2 Month end date d1 Day first date d2 Day end date SIMSTART Starting date simulations format \"yyyy-mm-dd\", default e.g. \"1918-01-01\" interval Interval \"month\" \"year\" \"quarter\" detect Detection limit parasites blood upperbounds Defines upper age bound per age group","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/xmlTimeGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate date sequence based on start and end date — xmlTimeGen","title":"Generate date sequence based on start and end date — xmlTimeGen","text":"Generate date sequence based start end date","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/xmlTimeGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate date sequence based on start and end date — xmlTimeGen","text":"","code":"xmlTimeGen(startDate = NULL, endDate = NULL, interval)"},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/xmlTimeGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate date sequence based on start and end date — xmlTimeGen","text":"startDate Date YYYY-MM-DD format endDate Date YYYY-MM-DD format interval string like '1 weeks'. seq.Date()","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/reference/xmlTimeGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate date sequence based on start and end date — xmlTimeGen","text":"sequence dates YYYY-MM-DD format","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/news/index.html","id":"openmalariautilities-2210","dir":"Changelog","previous_headings":"","what":"openMalariaUtilities 22.10","title":"openMalariaUtilities 22.10","text":"Feature release Now, collection results can parallelized two strategies data stored SQLite database can customized using three function can passed arguments generateScenarios deprecated replaced finalizeScenarios","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/news/index.html","id":"openmalariautilities-22081","dir":"Changelog","previous_headings":"","what":"openMalariaUtilities 22.08.1","title":"openMalariaUtilities 22.08.1","text":"Maintenance release Allow use interventions (d504923) Fix unexpected behavior splitSeq (cd6c0f1) Fix undefined placeholder detection (4dbf142) Warn simStart startDate (08f6ec5) Add deploy_cont_compat (6f8b483, 4ec4189, 38d6345) Add experiment summary (1334d9c)","code":""},{"path":"https://swisstph.github.io/r-openMalariaUtilities/news/index.html","id":"openmalariautilities-22080","dir":"Changelog","previous_headings":"","what":"openMalariaUtilities 22.08.0","title":"openMalariaUtilities 22.08.0","text":"Open Malaria’s results now collected stored SQLite database major processing steps, e.g. scenario creation simulation can now done parallel. Currently, collection storage results still single-threaded. Data analysis/post-processing removed. concluded opionated scope package.","code":""}]
